=============
Data Modeling
=============

On the certification exam, we will verify that you:

- Understand the overriding principles of data modeling
- Given two alternative data models, can determine which will be more efficient
- Know common patterns for schema design
- Know the benefits of special data formats in MongoDB
- Understand the implications of the storage engine for data modeling


Introduction
------------

For the exam, you should know:

- Fundamental data modeling considerations such as consideration for common data access patterns
- How we define the term "working set"
- Why considerations of the working set and working set size are important for efficient read and write operations

Resources:

- Docs:

  - `Data Modeling Introduction <http://docs.mongodb.org/master/core/data-modeling-introduction/>`_
  - `Working Set <http://docs.mongodb.org/master/faq/diagnostics/#what-is-a-working-set>`_

- Video:

  - `Schema Design Introduction <https://youtu.be/AABYJM12qF4>`_

- White Paper:

  - `Data Model Design for MongoDB <http://docs.mongodb.org/master/MongoDB-data-models-guide.pdf>`_ Note: This is a fairly comprehensive overview, touching on many of the sections of the exam.


Document Structure
------------------

For the exam, you should know:

- The difference between embedding documents and creating references
- What it means to denormalize data
- How each of these practices are used to model data in a collection

Resources:

- Docs:

  - `Document Structure <http://docs.mongodb.org/master/core/data-modeling-introduction/#document-structure>`_
  - `Data Model Design <http://docs.mongodb.org/v3.0/core/data-model-design/>`_

- Video:

  - `Benefits of Embedding <https://university.mongodb.com/videos/y/XIN0Dqht08Q>`_
  - `When to Denormalize <https://university.mongodb.com/videos/y/jDZ-HFoJ0vg>`_


Relational Features and MongoDB Patterns
----------------------------------------

For the exam, you should know:

- You don't actually need to know this, but it can help for people who come from the relational world to know the differences.

- Videos:

  - `Living without Constraints <https://university.mongodb.com/videos/y/YFRMkDPaams>`_
  - `Living without Transactions <https://university.mongodb.com/videos/y/FfRr3qjRfww>`_

- Docs:

  - `Database References <http://docs.mongodb.org/master/reference/database-references/>`_
  - :manual:`Atomicity and Transactions</core/write-operations-atomicity/>`
  - `Atomicity of Write Operations <http://docs.mongodb.org/master/core/data-modeling-introduction/#atomicity-of-write-operations>`_


One-to-One Relationships
------------------------

For the exam, you should know:

- How to model one-to-one relationships
- Advantages and disadvantages of embedding vs. referencing for one-to-one relationships

Resources:

- Docs:

  - `Model One-to-One Relationships with Embedded Documents <http://docs.mongodb.org/master/tutorial/model-embedded-one-to-one-relationships-between-documents/>`_

- Video:

  - `One to One Relationships <https://university.mongodb.com/videos/y/cCsfon0vUlQ>`_


One-to-Many Relationships
-------------------------

For the exam, you should know:

- Your options for modeling one-to-many relationships
- Advantages and disadvantages of each options
- Common patterns for modeling one-to-many relationships

Resources:

- Video:

  - `One-to-Many Relationships <https://university.mongodb.com/videos/y/EIaP1KbVkUc>`_

- Docs:

  - `One-to-Many Relationships with Embedded Documents <http://docs.mongodb.org/master/tutorial/model-embedded-one-to-many-relationships-between-documents/>`_
  - `One-to-Many Relationships with Document References <http://docs.mongodb.org/master/tutorial/model-referenced-one-to-many-relationships-between-documents/>`_

- Blog Posts:

  - `Rules of Thumb <http://blog.mongodb.org/post/87200945828/6-rules-of-thumb-for-mongodb-schema-design-part-1>`_
  - `Rules of Thumb Part 2 <http://blog.mongodb.org/post/87892923503/6-rules-of-thumb-for-mongodb-schema-design-part-2>`_
  - `Rules of Thumb Part 3 <http://blog.mongodb.org/post/88473035333/6-rules-of-thumb-for-mongodb-schema-design-part-3>`_


Many-to-Many Relationships
--------------------------

For the exam, you should know:

- How to model many-to-many relationships

Resources:

- Video:

  - `Many to Many Relationships <https://university.mongodb.com/videos/y/fEYYjZ7zEHc>`_


Modeling Tree Structures
------------------------

For the exam, you should know:

- Common tree structure modeling patterns
- Advantages & disadvantages of each for reading & writing

Resources:

- Video:

  - `Trees <https://university.mongodb.com/videos/y/lIjXyQklGWY>`_

- Docs:

  - `Model Tree Structures <http://docs.mongodb.org/master/applications/data-models-tree-structures/>`_
  - `Model Tree Structures with Parent References <http://docs.mongodb.org/master/tutorial/model-tree-structures-with-parent-references/>`_
  - `Model Tree Structures with Child References <http://docs.mongodb.org/master/tutorial/model-tree-structures-with-child-references/>`_
  - `Model Tree Structures with an Array of Ancestors <http://docs.mongodb.org/master/tutorial/model-tree-structures-with-ancestors-array/>`_
  - `Model Tree Structures with Materialized Paths <http://docs.mongodb.org/master/tutorial/model-tree-structures-with-materialized-paths/>`_
  - `Model Tree Structures with Nested Sets <http://docs.mongodb.org/master/tutorial/model-tree-structures-with-nested-sets/>`_

Schema Design Patterns
----------------------

For the exam, you should know:

- How to model data for keyword search
- How to model monetary data

Resources:

- Docs:

 - `Model Data to Support Keyword Search <http://docs.mongodb.org/master/tutorial/model-data-for-keyword-search/>`_
 - `Model Monetary Data <http://docs.mongodb.org/master/tutorial/model-monetary-data/>`_


MongoDB BLOB Options
--------------------

For the exam, you should know:

- That GridFS can store large binary files in a queryable format
- Approximately how large the documents in GridFS are
- How to store data in GridFS

Resources:

- Video:

  - `GridFS <https://university.mongodb.com/videos/y/AsL5p1Z0Ss8>`_

- Docs:

  - :manual:`GridFS Storage</core/gridfs/>`
  - :manual:`GridFS Reference</reference/gridfs/>`


Exercise
--------

- Think of an online marketplace, analogous to, perhaps, eBay or Amazon.
- Create a schema for handling the data associated with your producs.

- Optimize the schema for fast writes.
  - Then consider what changes you would make to optimize the schema for fast reads.
