Data Modeling
-------------

On the certification exam, we will attempt to verify that you :

- Understand the overriding principles of data modeling
- Given two alternative data models, can determine which will be more efficient
- Know common patterns for schema design
- Know the benefits of special data formats in MongoDB
- Understand the implications of the storage engine for data modeling


Data Modeling Subtopoics
------------------------

- Introduction
- Document Structure

  - Embedding
  - References
  - Denormalizing

- Relational Features and MongoDB Patterns

  - Transactions
  - Atomic Writes

- One-to-many relationships
- One-to-one relationships
- Many-to-many relationships
- Modeling Tree Structures
- Schema Design Patterns
- Bulk Operations
- MongoDB BLOB options

  - GridFS
  - Binary Data


Introduction
------------

For data modeling, keep in mind at all times that the structure of documents affects performance. Your goals are to try to ensure that any data you need is in memory, especially if you're going to read it frequently. There are costs associated with going to disk for data that isn't in memory. You not only need to spend time seeking and reading data from disk, but when you pull that data into memory, you push other data out.

Your schema is what data you're storing in documents, and how that data is stored. Data modeling is about choosing the right schema for your tasks.

One of the key concepts of data modeling is the idea of the "working set" of data. This is the data you read frequently. If it fits in RAM, your performance should be good; if it doesn't, you'll frequently have to touch the disk. This will often have higher costs for spinning disk media than for SSD's, but there will be a cost, regardless.

Much of data modeling is centered around designing schemas that ensure that you're reading everything you need with as few queries as possible, while also removing from your frequently-read documents anything you don't frequently use.

Docs:

  - `Data Modeling Introduction <http://docs.mongodb.org/master/core/data-modeling-introduction/>`_
  - `Working Set <http://docs.mongodb.org/master/faq/diagnostics/#what-is-a-working-set>`_

Video:

  - `Schema Design Introduction <https://youtu.be/AABYJM12qF4>`_

White Paper:

  - `Data Model Design for MongoDB <http://docs.mongodb.org/master/MongoDB-data-models-guide.pdf>`_

    - This is more of a full guide than an introduction, and looks into many of the sections of the exam.



Document Structure
------------------

Docs:

  - `Document Structure <http://docs.mongodb.org/master/core/data-modeling-introduction/#document-structure>`_
  - `Data Model Design <http://docs.mongodb.org/v3.0/core/data-model-design/>`_

Video:

  - `Benefits of Embedding <https://university.mongodb.com/videos/y/XIN0Dqht08Q>`_
  - `When to Denormalize <https://university.mongodb.com/videos/y/jDZ-HFoJ0vg>`_



Relational Features and MongoDB Patterns
----------------------------------------

Many developers and DBA's come from the relational world, so you should be familiar with some of the features of relational DB's, particularly joins (which involve simultaneously reading from several tables) and transactions (which involve simultaneously writing to several tables). 

Videos:

  - `Living without Constraints <https://university.mongodb.com/videos/y/YFRMkDPaams>`_
  - `Living without Transactions <https://university.mongodb.com/videos/y/FfRr3qjRfww>`_

Docs:

  - `Database References <http://docs.mongodb.org/master/reference/database-references/>`_
  - :manual:`Atomicity and Transactions</core/write-operations-atomicity/>`
  - `Atomicity of Write Operations <http://docs.mongodb.org/master/core/data-modeling-introduction/#atomicity-of-write-operations>`_


One-to-One Relationships
------------------------

Docs:

  - `Model One-to-One Relationships with Embedded Documents <http://docs.mongodb.org/master/tutorial/model-embedded-one-to-one-relationships-between-documents/>`_

Video:

  - `One to One Relationships <https://university.mongodb.com/videos/y/cCsfon0vUlQ>`_



One-to-Many Relationships
-------------------------

Video:

  - `One to Many Relationships <https://university.mongodb.com/videos/y/EIaP1KbVkUc>`_

Docs:

  - `One-to-Many Relationships with Embedded Documents <http://docs.mongodb.org/master/tutorial/model-embedded-one-to-many-relationships-between-documents/>`_
  - `One-to-Many Relationships with Document References <http://docs.mongodb.org/master/tutorial/model-referenced-one-to-many-relationships-between-documents/>`_

Blog Posts: 

  - `Rules of Thumb <http://blog.mongodb.org/post/87200945828/6-rules-of-thumb-for-mongodb-schema-design-part-1  >`_
  - `Rules of Thumb Part 2 <http://blog.mongodb.org/post/87892923503/6-rules-of-thumb-for-mongodb-schema-design-part-2>`_
  - `Rules of Thumb Part 3 <http://blog.mongodb.org/post/88473035333/6-rules-of-thumb-for-mongodb-schema-design-part-3>`_


Many-to-Many Relationships
--------------------------

Video:

  - `Many to Many Relationships <https://university.mongodb.com/videos/y/fEYYjZ7zEHc>`_


Modeling Tree Structures
------------------------

Video:

  - `Trees <https://university.mongodb.com/videos/y/lIjXyQklGWY>`_

Docs:

  - `Model Tree Structures <http://docs.mongodb.org/master/applications/data-models-tree-structures/>`_
  - `Model Tree Structures with Parent References <http://docs.mongodb.org/master/tutorial/model-tree-structures-with-parent-references/>`_
  - `Model Tree Structures with Child References <http://docs.mongodb.org/master/tutorial/model-tree-structures-with-child-references/>`_
  - `Model Tree Structures with an Array of Ancestors <http://docs.mongodb.org/master/tutorial/model-tree-structures-with-ancestors-array/>`_
  - `Model Tree Structures with Materialized Paths <http://docs.mongodb.org/master/tutorial/model-tree-structures-with-materialized-paths/>`_
  - `Model Tree Structures with Nested Sets <http://docs.mongodb.org/master/tutorial/model-tree-structures-with-nested-sets/>`_


Schema Design Patterns
---------------------- 

Docs:

 - `Model Data to Support Keyword Search <http://docs.mongodb.org/master/tutorial/model-data-for-keyword-search/>`_
 - `Model Monetary Data <http://docs.mongodb.org/master/tutorial/model-monetary-data/>`_


Bulk Operations
---------------

Bulk Operations allow you to use bulk write operations to amortize a write concern response over many documents.

Docs:

  - `db.collection.insert() <http://docs.mongodb.org/master/reference/method/db.collection.insert/#db.collection.insert>`_
  - `Bulk Write Operations <http://docs.mongodb.org/master/core/bulk-write-operations/>`_



MongoDB BLOB Options
--------------------

MongoDB has a binary type (which you should be aware of), and can also break up large BLOBS using GridFS.

Video:

  - `GridFS <https://university.mongodb.com/videos/y/AsL5p1Z0Ss8>`_

Docs:

  - :manual:`GridFS Storage</core/gridfs/>`
  - :manual:`GridFS Reference</reference/gridfs/>`

Exercises
---------

- Think of an online marketplace, analogous to, perhaps, eBay or Amazon.

  - Create a schema for handling the data associated with your producs.

    - Optimize the schema for fast writes
    - Optimize the scheme for fast reads.
