Philosophy and Features
-----------------------

On the certification exam, we will attempt to verify that you:
- Know and can define the basic features of MongoDB 
- Understand JSON and BSON at a basic level


Philosophy and Features Subtopics
---------------------------------

- JSON
- BSON
- The Mongo Shell
- Horizontal Scaling
- The Mongo Shell
- MongoDB and Relational DB's
- MongoDB as a "schemaless" database

Here is a white paper that touches on multiple topics_.

.. _white paper that touches on multiple topics: https://www.mongodb.com/json-and-bson


JSON
----

The JSON spec is pretty basic; you should know:
- All JSON types
- The structure of JSON objects and arrays
- How to nest JSON objects, arrays, and other types

Here are some good resources:

Videos:
- JSON video lessons
  - Introduction to JSON_
  - JSON revisited_
  - JSON subdocuments_
  - JSON spec_
- JSON web or pdf literature:
  - Intro to JSON_
  - json.org_
  - Document databases_

.. _json.org: http://json.org/
.. _Document databases: https://www.mongodb.com/document-databases
.. _Intro to JSON: http://docs.mongodb.org/manual/reference/mongodb-extended-json/
.. _JSON revisited: https://university.mongodb.com/videos/y/CTffxoSSLqg
.. _JSON subdocuments: https://university.mongodb.com/videos/y/vrYAEH3g13M
.. _JSON spec: https://university.mongodb.com/videos/y/kOrsT94-A28
.. _Introduction to JSON: _https://university.mongodb.com/videos/y/PTATjNSjbJ0


BSON
----

The following should help elucidate BSON a bit:

- Web docs:
  - BSON spec_
- MongoDB Docs:
  - Bsondump_ (you can point it at MongoDB data files if you're using MMAPv1)

.. _BSON spec: http://bsonspec.org/  
.. _BSONdump: http://docs.mongodb.org/manual/reference/program/bsondump/


The Mongo Shell
---------------

The javascript shell is used both for administration of MongoDB, and to teach people how to use the database. It's essentially a lightweight javascript client. Here are some resources to help familiar with it:

Video:
  - Lesson video_
Docs:
  - Getting Started with the mongo Shell_
  - mongo Shell Quick Reference_

You should also know the types in the shell_.


.. _Getting Started with the mongo Shell: http://docs.mongodb.org/manual/tutorial/getting-started-with-the-mongo-shell/

.. _Lesson video: https://university.mongodb.com/videos/y/e18vCIdQKp4
.. _mongo Shell Quick Reference: http://docs.mongodb.org/manual/reference/mongo-shell/
.. _types in the shell: http://docs.mongodb.org/manual/core/shell-types/


Vertical and Horizontal Scaling
-------------------------------

Vertical scaling can be done by any database -- it involves buying a bigger box on which to put your database. Faster CPU, more RAM, or more/bigger/faster hard drives. 

Horizontal scaling, though, involves distributing your data across multiple servers, and at this task, not every database is equally scalable. MongoDB is designed to horizontally scale well.

Webinar:
  - Scaling MongoDB Webinar Series_
Docs:
  - Sharding Introduction_

.. _Scaling MongoDB Webinar Series: https://www.mongodb.com/lp/webinar/scaling-series-sept-2014
.. _Sharding Introduction: http://docs.mongodb.org/manual/core/sharding-introduction/


MongoDB and Relational DB's
---------------------------

Relational databases are the biggest players in the database world right now. MongoDB stands in contrast to them, and you should be familiar with some of the basic features of Relational Databases that aren't present in MongoDB, and conversely, the features of MongoDB that aren't present in relational databases.


Video:
  - MongoDB and Relational DB's_
Docs:
  - SQL to MongoDB Mapping Chart_
MongoDB.com:
  - Compare MongoDB and MySQL_

.. _MongoDB and Relational DB's: https://university.mongodb.com/videos/y/-KIC1LXxcGM
.. _Compare MongoDB and MySQL: https://www.mongodb.com/compare/mongodb-mysql
.. _SQL to MongoDB Mapping Chart: http://docs.mongodb.org/manual/reference/sql-comparison/


MongoDB as a "Schemaless" Database
----------------------------------

Some people refer to MongoDB as "schemaless," though it's more accurate to say that MongoDB can use a flexible schema. While in a relational DB, every row of a table must contain the same fields, with MongoDB, you can have fields that are present in one document but not in another document, even if they're in the same collection. This gives developers a flexibility that relational databases lack.

- Lesson video_
- Data Modeling Introduction_

.. _Lesson video: https://university.mongodb.com/videos/y/uKB-Hoqs6zI
.. _Data Modeling Introduction: http://docs.mongodb.org/master/core/data-modeling-introduction/


Sample Problems
---------------

1. Which features of relational database management systems were deliberately omitted in MongoDB and help us to obtain horizontal scalability? Check all that apply.

a. Multi-statement transactions
b. Authentication
c. Joins

2. In order to ensure that you can maintain high availability in the face of server failure, you should implement which of the following?

a. Replication
b. Sharding
c. The proper storage engine
d. Properly defined user roles
e. Put indexes on all of your documents

3. What are the uses of the mongo shell? Check all that apply.

a. Introduce people to MongoDB with a simple interface.
b. Perform administrative tasks.
c. Use as a javascript framework for your production system.

Answers to Sample Problems
--------------------------

1. a, c
2. a
3. a, b
