============
Server Tools
============

For the Certification Exam, Students will be expected to understand:

- How to export and import data using server tools
- How to monitor basic operations on the server using server tools
- How to backup and restore data, and examine backed-up data, using the server tools (DBA only)
- Which tools to use to sniff network data, manipulate GridFS files, and analyze disk I/O (DBA only)


Server Tools Topics
-------------------

- Introduction
- Importing/exporting data

  - Mongoimport
  - Mongoexport

- Basic Server Monitoring

  - Mongostat
  - Mongotop

- Backing up and restoring data (DBA Only)

  - Mongodump
  - Mongorestore

- Advanced MongoDB Diagnostics (DBA Only)

  - Mongosniff
  - Bsondump
  - Mongoperf

- Manipulating BLOBs (DBA Only)

  - Mongofiles


Introduction
------------

Most of the information tested can be found by running the tools with --help.

For the Dev exam, you will need to know tools to import/export data, and to perform basic tests of your appliation. You will need to know about:

- mongoimport
- mongoexport
- mongostat
- mongotop

For the DBA exam, you will need to know all of the tools that ship with MongoDB. This includes the tools listed above, as well as:

- mongodump
- mongorestore
- mongosniff
- mongofiles
- bsondump
- mongoperf


Importing and Exporting Data
----------------------------

You should be able to import and export common data types to/from MongoDB, such as JSON, CSV, and TSV files.

- Docs:

  - `mongoimport docs <https://docs.mongodb.org/v3.0/reference/program/mongoimport/>`_
  - `mongoexport docs <https://docs.mongodb.org/v3.0/reference/program/mongoexport/>`_
  - `mongostat docs <https://docs.mongodb.org/v3.0/reference/program/mongostat/>`_
  - `mongotop docs <https://docs.mongodb.org/v3.0/reference/program/mongotop/>`_

- Videos:

  - `Importing from Reddit <https://university.mongodb.com/videos/y/oVmoi6fS4X8>`_



Basic Server Monitoring
-----------------------

You should know how to use mongostat and mongotop to ensure that the database is behaving as you expect. Make sure you look at what they display for each storage engine, and understand what information each field can tell you. For DBA's, we may ask you to diagnose an issue based on the output of mongostat.

- Docs:

  - :manual:`mongostat</reference/program/mongostat/>`
  - :manual:`mongotop</reference/program/mongotop/>`

- Videos:

  - `mongostat video <https://university.mongodb.com/videos/y/E2aDTSes3Wc>`_
  - `mongotop video <https://university.mongodb.com/videos/y/D9YLXgy7NYo>`_



Backing up and Restoring Data (DBA Only)
----------------------------------------

You should be familiar with how to use mongodump to backup a database (including using --oplog to capture write operations that occur during the mongodump), and mongorestore to bring it back.

- Docs:

  - :manual:`mongodump</reference/program/mongodump/>`
  - :manual:`mongorestore</reference/program/mongorestore/>`

- Video:

  - `mongoDB tools for backup <https://university.mongodb.com/videos/y/Ln6gyZ_0yDk>`_


Advanced MongoDB Diagnostics (DBA Only)
---------------------------------------

For these tools, you should be aware that they exist, and what they're there for, but we will not ask for detailed information about their behavior.

- Docs:

  - :manual:`mongosniff</reference/program/mongosniff/>`
  - :manual:`bsondump</reference/program/bsondump/>`
  - :manual:`mongoperf</reference/program/mongoperf/>`



Manipulating BLOBs (DBA only)
-----------------------------

The mongofiles utility is used to store binary data in MongoDB's GriFS storage. You should be aware of what it does, but will not need more than that.

- Docs: 

  - :manual:`mongofiles</reference/program/mongofiles/>`



Exercises
---------

- For each of the server tools listed in the topics section, run the tool with --help.
- Run mongostat. Then, write a loop in the the language of your choice (or the shell) that bulk inserts 1,000 small documents per batch as fast as possible for at least a minute. Run it and look at the output of mongostat, and compare it with your expectations. Pay attention to each field.
- Run mongostat. Then, write a loop in the language of your choice (or the shell) that individually inserts 1 large document (100+ kb per insert) at a time as fast as possible for at least a minute. Run it and look at the output of mongostat, comparing the output with your expectations. Pay attention to each field. This time, try to use a different storage engine than you did last time.
- Run mongotop. Using a script from above, begin inserting data, and also run some queries in another database. Look at the output of mongotop.
- Do the same with mongoperf.
- Import a JSON file. You might find one at Reddit's technology subreddit, the Enron email data set, or find something else on the web.

  - `Technology Subreddit <https://www.reddit.com/r/technology/.json>`_
  - `Enron email data set <http://www.cs.cmu.edu/~enron/>`_
  - You may find that the format isn't quite what you want. Transform it, either with a script or with the aggregation pipeline, using $out, into a more usable form.

- Find a CSV data set from US public data, and import it. If you don't like its initial format, you can transform it and put it in a new collection using the aggregation pipeline's $out function.

  - `US public data <https://catalog.data.gov/dataset?res_format=CSV>`_

- Perform a mongodump. Look at the output using bsondump. Drop the database and then use mongorestore to get it back from your backup. Run mongodump with --oplog and compare the mongorestore with --oplog replay, and without.
- If you are running a linux machine, run mongosniff and run some queries; find them using mongosniff.


