===============
Storage Engines
===============

By the end of this module, students will know:

- The locking level or concurrency protocols for each storage engine
- The compression algorithms available for WiredTiger
- For MMAPv1, the causes & effects of document movement
- The effects of these features on the performance of MongoDB

Storage Engine Subtopics
------------------------

- Introduction
- Summary of Major Differences between MMAPv1 and WiredTiger
- MMAPv1

  - Collection Level Locking
  - Data Files
  - Document Growth
  - Document Movement
  - Power of Two Sizes Allocation Strategy

    - No Padding Option

  - Updating indexes on document movement

- WiredTiger

  - Block Compression

    - Compression Algorithms

  - Index Prefix Compression
  - Concurrency Protocols

- Concurrency in MongoDB 3.0
- Data Files

Introduction
------------

MongoDB's storage engine is its method of taking BSON, storing it in memory, and writing it to disk. Pluggable storage engines were introduced with MongoDB 3.0; prior to that, the "classic" storage engine for MongoDB was MMAPv1.

- Docs:

  - `Storage FAQ <https://docs.mongodb.org/v3.0/core/storage/>`_
  - :manual:`Storage for Write Operations</core/storage/>`

- Videos:

  - `Storage Engines Introduction <https://university.mongodb.com/videos/y/yV8qgeXvAyI>`_



Summary of Major Differences between MMAPv1 and WiredTiger
----------------------------------------------------------

- Locks/Concurrency

  - MMAPv1 uses collection level locking in MongoDB 3.0
  - WT has document-level concurrency

- Journaling

  - MMAPv1 requires it to prevent data corruption during process failure
  - WT does not require it to prevent data corruption
  - Makes writes to disk more timely in both, but also requires extra disk writing.

- Data Compression

  - 2 options are available in WiredTiger, none in MMAPv1.

- Other Considerations

  - MMAPv1 is written out directly in data files that contain BSON documents. If a BSON document outgrows its allotted space, it will have to be moved. Indexes that point to this document point to its file offset, and will need to be updated, which can make writes more exmensive. It also leaves behind "holes" in the data files.

    - To minimize these occurrences, we use the Power of Two Sizes Allocation strategy, allocating a "record space" to each document that is larger than the document. If the document outgrows its record space, the record space remains behind when the document moves, and that record space can be re-used by another document.

- Sharding and Replication

  - There are no differences between the storage engines with respect to Sharding or Replication to be on the exam.


MMAPv1
------

An upgrade to the "classic" MongoDB storage engine, this involved an early design decision to rely on the mmap system call to memory map the data files (where the BSON documents were written out) onto the disk, and simply treat them as if they were in memory while the operating system handled the storage layer.

- Docs:
  - `Storage FAQ MMAPv1 Section <http://docs.mongodb.org/master/faq/storage/#mmapv1-storage-engine>`_
  - :manual:`Power of 2 Sized Allocations</core/storage/#power-of-2-allocation>`
  - :manual:`No Padding</core/storage/#no-padding-allocation-strategy>`
- Videos:
  - `MMAPv1 <https://university.mongodb.com/videos/y/PZCdLVB4lw4>`_
  - `MMAPv1 Documents and Data Files <https://university.mongodb.com/videos/y/9nYFnlM4vYw>`_



WiredTiger
----------

- Docs:

  - `Storage FAQ WiredTiger Section <http://docs.mongodb.org/master/faq/storage/#wiredtiger-storage-engine>`_
  - :manual:`Index Prefix Compression</reference/glossary/#term-prefix-compression>`
  - Compression Options:

    - :manual:`Snappy</reference/glossary/#term-snappy>`
    - :manual:`Zlib</reference/glossary/#term-zlib>`

- Videos:

  - `WiredTiger <https://university.mongodb.com/videos/y/O9TGqK3FBX8>`_


Concurrency
-----------

- Docs:

  - `Concurrency FAQ <http://docs.mongodb.org/master/faq/concurrency/>`_


Data Files
----------

Be sure to look at your data directory and be able to recognize the difference between a WiredTiger data directory and an MMAPv1 one.

Here is an MMAPv1 directory:

.. code:: bash

  $ ls -la
  total 1179664
  -rw-------   1 will  staff    16M Sep 14 08:56 test.ns
  -rw-------   1 will  staff    64M Sep 14 08:56 test.0
  -rw-r--r--   1 will  staff    69B Sep 10 15:52 storage.bson
  -rwxr-xr-x   1 will  staff     5B Sep 10 15:52 mongod.lock*
  -rw-------   1 will  staff    16M Sep 16 00:38 local.ns
  -rw-------   1 will  staff   256M Sep 16 00:38 local.1
  -rw-------   1 will  staff    64M Sep 10 15:54 local.0
  drwxr-xr-x   4 will  staff   136B Sep 14 08:55 journal/
  -rw-------   1 will  staff    16M Sep 16 00:38 foo.ns
  -rw-------   1 will  staff    64M Sep 16 00:38 foo.0
  drwxr-xr-x   2 will  staff    68B Sep 16 00:34 _tmp/
  drwxr-xr-x   4 will  staff   136B Sep 10 15:52 ../
  drwxr-xr-x  15 will  staff   510B Sep 16 00:34 ./

And here is a WiredTiger directory:

.. code:: bash

  $ ls -la
  total 360
  -rw-r--r--   1 will  staff    95B Sep 16 15:43 storage.bson
  -rw-r--r--   1 will  staff    16K Sep 16 15:43 sizeStorer.wt
  -rwxr-xr-x   1 will  staff     6B Sep 16 15:43 mongod.lock*
  drwxr-xr-x   5 will  staff   170B Sep 16 15:43 journal/
  -rw-r--r--   1 will  staff    16K Sep 16 15:43 index-5-5307542050812875631.wt
  -rw-r--r--   1 will  staff    16K Sep 16 15:43 index-3-5307542050812875631.wt
  -rw-r--r--   1 will  staff    16K Sep 16 15:43 index-1-5307542050812875631.wt
  drwxr-xr-x   4 will  staff   136B Sep 16 15:43 diagnostic.data/
  -rw-r--r--   1 will  staff   4.0K Sep 16 15:43 collection-6-5307542050812875631.wt
  -rw-r--r--   1 will  staff    16K Sep 16 15:43 collection-4-5307542050812875631.wt
  -rw-r--r--   1 will  staff    16K Sep 16 15:43 collection-2-5307542050812875631.wt
  -rw-r--r--   1 will  staff    16K Sep 16 15:43 collection-0-5307542050812875631.wt
  -rw-r--r--   1 will  staff    16K Sep 16 15:43 _mdb_catalog.wt
  -rw-r--r--   1 will  staff   4.0K Sep 16 15:43 WiredTigerLAS.wt
  -rw-r--r--   1 will  staff    24K Sep 16 15:43 WiredTiger.wt
  -rw-r--r--   1 will  staff   907B Sep 16 15:43 WiredTiger.turtle
  -rw-r--r--   1 will  staff    21B Sep 16 15:43 WiredTiger.lock
  -rw-r--r--   1 will  staff    45B Sep 16 15:43 WiredTiger
  drwxr-xr-x   4 will  staff   136B Sep 16 15:43 ../
  drwxr-xr-x  20 will  staff   680B Sep 16 15:43 ./

Exercises
---------

- Use mongostat and mongotop to compare the throughput of inserts, updates, and reads for WiredTiger and MMAPv1. Do so for a variety of loads and different types of read & write operations.
- Perform lots of inserts for both WiredTiger and MMAPv1, and compare the size of the data files. Repeat with each compression option for WiredTiger.
- Set up a replica set with different storage engines simultaneously operating in it.
