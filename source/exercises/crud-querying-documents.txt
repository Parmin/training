=======================
Lab: Querying Documents
=======================



Exercise: Scores < 65
---------------------

In the sample database, how many documents in the scores collection have a score less than 65?
   
.. only:: instructor

   .. note::

      - 832
      - db.scores.find( { score: { $lt: 65 } } )
        

.. include:: /includes/student-notes.rst


Exercise: Exams and Quizzes
---------------------------

In the sample database, how many documents in the scores collection have the type "exam" or "quiz"?
   
.. only:: instructor

   .. note::

      - 2000
      - db.scores.find({ type: { $in: [ "exam", "quiz" ] } }).count()

.. include:: /includes/student-notes.rst


Exercise: Highest Quiz Score 
----------------------------

Find the highest quiz score.

.. only:: instructor

   .. note::

      - You can .limit() with .sort()
      - db.scores.find( { type: "quiz" } ).sort( { score:  -1 } ).limit(1)[0].score

.. include:: /includes/student-notes.rst


Exercise: View Count > 1000
---------------------------

In the digg.stories collection, write a query to find all stories where the view count is greater than 1000.
   
.. only:: instructor

   .. note::

      - Requires querying into subdocuments
      - db.stories.find( { "shorturl.view_count": { $gt: 1000 } } )

.. include:: /includes/student-notes.rst


Exercise: Television or Videos
------------------------------

Find all digg stories where the topic name is "Television" or the media type is "videos". Skip the first 5 results and limit the result set to 10.

.. only:: instructor

   .. note::

      .. code-block:: javascript

         db.stories.find( { "$or": [ { "topic.name": "Television" },
	                             { media: "news" } ] } ).skip(5).limit(10)
        
.. include:: /includes/student-notes.rst


Exercise: News or Images
------------------------

Query for all digg stories whose media type is either "news" or "images" and where the topic name is "Comedy". (For extra practice, construct two queries using different sets of operators to do this.)

.. only:: instructor

   .. note::

      .. code-block:: javascript

         db.stories.find( { media: { $in: [ "news", "images" ] },
	                    "topic.name": "Comedy" })
        
.. include:: /includes/student-notes.rst
      
