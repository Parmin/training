Exercise: Inserting geoJSON Objects (1)
---------------------------------------

Add a few flights to our collection using the following location data:

- LaGuardia (New York): 40.7772° N, 73.8726° W
- JFK (New York): 40.6397° N, 73.7789° W
- Newark (New York): 40.6925° N, 74.1686° W
- Heathrow (London): 52.4775° N, 0.4614° W
- Gatwick (London): 51.1481° N, 0.1903° W
- Stansted (London): 51.8850° N, 0.2350° E
- Luton (London): 51.9000° N, 0.4333° W

.. only:: instructor

   .. note::

      .. code-block:: javascript

         laguardia = [ -73.8726, 40.7772 ]
         jfk = [ -73.7789, 40.6397 ], 
         newark = [ -74.1686, 40.6925 ]
         heathrow = [ -0.4614, 52.4775 ]
         gatwick = [ -0.1903, 51.1481 ]
         stansted = [ 0.2350, 51.8850 ]
         luton = [-0.4333, 51.9000 ]

.. only:: instructor

   .. note::

      - The order of the coordinates is correct. 
      - Remember, we use [ latitude, longitude ].
      - In this example, we have made North (latitude) and East (longitude) positive. 
      - West and South are negative.


Exercise: Inserting geoJSON Objects (2)
---------------------------------------

- Now, let's make arrays of these.
- Put all the New York area airports into an array called ``nyPorts``.
- Put all the London area airports into an array called ``londonPorts``.
- Create a third array for flight numbers: "AA4453", "VA3333", "UA2440"

.. only:: instructor

   .. note::

      .. code-block:: javascript

         nyPorts = [ laguardia, jfk, newark ]
         londonPorts = [ heathrow, gatwick, stansted, luton ]
         flightNumbers = [ "AA4453", "VA3333", "UA2440" ]


Exercise: Inserting geoJSON Objects (3)
---------------------------------------

- Create documents for every possible New York to London flight.
- Include a ``flightNumber`` field for each flight.

.. only:: instructor

   .. note::

      .. code-block:: javascript

         for (takeoff in ny_ports) {
             for (landing in london_ports) {
                 db.flights.insert(
                     { origin : { type : "Point",
                                  coordinates : ny_ports[takeoff] },
                       destination : { type : "Point",
                                       coordinates : london_ports[landing] },
                       flightNumber : flightNumbers[takeoff] } )
              }
         }
