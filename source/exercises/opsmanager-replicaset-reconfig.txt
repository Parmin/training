=========================
Lab: Reconfig Replica Set
=========================

Learning Objectives
-------------------

Upon completing this lab, we expect students to:

- Understand how to reconfigure a replica set.
- Understand the different stages of deployments.

.. include:: /includes/student-notes.rst


Dependencies
------------

In order to complete all purposed exercises we need to first enable the Public API.

- Go to your group settings and enable the Public API
- Do not forget to set an appropriate CIDR block for the IP whitelist and Generate the API Key

.. include:: /includes/student-notes.rst

.. only:: instructor

  .. note::

    Make sure students are aware of this dependency.

Exercise: Initial Replica Set
-----------------------------

Using the Ops Manager UI go ahead and create a 3 node replica set:

- Replica set name ``METAMORPHOSIS``
- Two data bearing nodes
- One arbiter

*All instances should be installed using MongoDB 3.2.1*

Exercise: Add Replica Set Members
---------------------------------

Let's assume that we require highler level of High Availability (HA).

- Add 2 new data bearing nodes

  - First node should have priority 0
  - Second node should be an hidden replica.


Exercise: Decomission Replica Member
------------------------------------

One of your nodes is not making the cut.

- Change your replica set by "decommissioning" one of the instances
- Make sure that your replica set keeps up majority and previous level of node failure resilience

.. only:: instructor

  .. note::

    Make sure students are aware of the fact that removing one of nodes might require adding an extra one.
    - Not totally true in this case since there's an ``arbiter`` member

      - They will keep the same availability by just removing a node
      - We can also remove the ``arbiter`` to keep an odd number of nodes



Exercise: Upgrade MongoDB Version
---------------------------------

Our CTO, for compliance reasons, demands that all of our nodes should be on the latest version of MongoDB.

- Upgrade all nodes in your replica set without downtime.


.. only:: instructor

  .. note::

      Students should be instructed to just change the version of MongoDB to the most recent version of MongoDB
      - Make sure they know how to make the required version available in their Ops Manager deployment.
      - Update the Version Manifest

        - Deployment -> Version Manager -> Update MongoDB Version Manifest

Exercise: Upgrade Replica Set Name
----------------------------------

We decided that we are not going to change our cluster going forward.

- Using Ops Manager API, update the replica set name to "PRODUCTION"

.. only:: instructor

  .. note::

      - Get the group Id and add it to an environment variable
      - Settings -> Group Settings (group id)

      .. code-block:: bash

        export GROUPID=YOURGROUPID

      - Create a new API key
      - Settings -> Public API Key -> Generate

      .. code-block:: bash

          export apiKey=YOURAPIKEY

      - Get your Cluster ID

      .. code-block:: bash

        // this will higlight your clusterid
        curl -u "$username:$apiKey" -H "Content-Type: application/json" --digest -i "http://opsmgr.training/api/public/v1.0/groups/$GROUPID/clusters/" | grep "id"

        export CLUSTERID=YOURCLUSTERSID

      - Update the replica set name

      .. code-block:: bash

        export username=yourusername
        curl -u "$username:$apiKey" -H "Content-Type: application/json" --digest -i -X PATCH "https://opsmgr.training/api/public/v1.0/groups/$GROUPID/clusters/$CLUSTERID" --data '
        {
        "clusterName": "PRODUCTION"
        }'
