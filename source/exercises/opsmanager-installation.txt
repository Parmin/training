=============================
Lab: Ops Manager Installation
=============================

Permise
-------

Ops Manager is a solution for on-prem MongoDB cluster operational management.

Enables features like:

- Automation
- Backup and Recovery
- Monitoring

Over the course of this lab we will be installing Ops Manager with high
availability and scalability in mind.

.. only:: instructor

  .. note::

    For this lab we will group students into teams.

    - There will be a maximum of 8 teams!
    - Each team will have at their disposal a 14 of virtual machines

      - 3 Ops Manager hosts
      - 11 Node hosts

    - Verify that all students have successfully pinged their designated hosts
    - These hosts will be properly tagged (dns or ip) with their intended purpose


.. include:: /includes/student-notes.rst


Ops Manager HA
--------------

Ops Manager requires a number of servers for high availability.

- Monitoring and backup/recovery are essential for production operations.
- Therefore, it's important to assure high availability for Ops Manager.
- For this we need to follow a specific deployment topology.

.. include:: /includes/student-notes.rst


Ops Manager Scalability
-----------------------

**Why do we need our operations tool to be scalable?**

- The main reason is backup and recovery requirements
- The amount of data individual applications generate will grow
- The number of applications your Ops Manager deployment supports will grow
- Plan to accommodate both forms of growth

.. include:: /includes/student-notes.rst

Ops Manager Architecture Review
-------------------------------

Let's review the `Ops Manager architecture`_ :

.. include:: opsmanager-network-diagram-fullsize.txt

.. only:: instructor

  .. note::

    For this diagram raise students attention to the following:

    - Ops Manager is composed out of two main services

      - HTTP Service: Ops Manager Application
      - Backup daemon

    - Ops Manager will collect data from the different agents

      - backup
      - monitoring
      - automation

    - Has three main datastores

      - Application DB (MongoDB Cluster)

        - user info
        - monitoring data
        - group data
        - backup job queries
        - backup metadata

      - Snapshot Storage (MongoDB Cluster)

        - Blockstore: data snapshots, divided in small chunks being compressed
          and de-deduplicated
        - or Filestore: data snapshots as files

      - Head Database

        - Keeps track of oplog and initial syncs
        - There's one head database for each backed-up replica set



.. include:: /includes/student-notes.rst

Launch Ops Manager MongoDB Instances
------------------------------------

It's time to set up the our hosts that will support Ops Manager Deployment.

We will need the following instances:

- Two Replica Set Clusters

  - Application Replica Set
  - BlockStore Replica Set

- Three instances to run redundant services of Ops Manager Application

- The *hosts* that will be supporting this deployment:

  - **OpsMgr1** **OpsMgr2** and **OpsMgr3**

- Load Balancer

  - this load balancer is already set up and should included in your team
    definition file

.. include:: /includes/student-notes.rst

.. only:: instructor

  .. note::

    Ask students to make a deployment and configuration plan.
    Use the following questions as guide:

    - Where do we start ?

      - Boot up Ops Manager Application Replica Set

    - Do we need a Replica Set to support the Backup Daemon?

      - Yes, we will be using Blockstore

        - we can use Filestore as alternative but for the exercise let's
          privilege Blockstore


1. Configure Ops Manager Application Database
---------------------------------------------

Ops Manager needs to store data:

- Configuration of nodes, groups, users
- Metrics for monitoring
- Backup metdata and job queries

Also consider relevant `security settings`_ for this database.

From the available machines go ahead and set up a Replica Set to support the
*Application Database*.

.. only:: instructor

  .. note::

    - Students should be assembling a 3 node Replica Set to allow the HA.
    - To validate their deployment you should ask students to run validation
      script

      - ``validate_appdb.py``

    Instruction set:
    - Connect to each OpsMgr instance and perform and launch a mongod

    .. code-block:: bash

      mongod -f /share/etc/appdb.conf

    - The `/share/etc/appdb.conf` file should have the following settings:

    .. code-block:: bash

      cat /share/etc/appdb.conf
      replication:
        replSetName: "APPDB"
        oplogSizeMB: 100
      storage:
        wiredTiger:
          engineConfig:
            cacheSizeGB: 2
            journalCompressor: zlib
      net:
        port: 30000

    - Once all instances ``mongod`` instances are up initiate the replica set

    .. code-block:: bash

      # replace OpsMgr{1,2,3} with corresponding internal ip addresses
      mongo --host OpsMgr1
      > rs.initiate(
        _id: 'APPDB',
        members: [
        {_id: 1, host:'OpsMgr1'},
        {_id: 1, host:'OpsMgr2'},
        {_id: 1, host:'OpsMgr3'},
        ]
      )


2. Configure and Launch OpsManager Service
------------------------------------------

**Habemus Replica Set!**

Now it's time to launch **Ops Manager** service. For this you will need to:

- Edit Ops Manager configuration ``conf-mms.properties``:

  - Point these to the previously configured Replica Set: **APPDB**
  - Allow `offline binary access`_

- Launch Ops Manager services

.. only:: instructor

  .. note::

    We are striving for an Highly Available Ops Manager deployment therefore:

    - Before mentioning *again* the HA requirement you may ask students why we
      need 2 OpsMgr nodes?
    - Make sure students use machines that are tagged with OpsManager

    You may want to point to the following documentation page:

    `configure HA app`_

    - Generate ``gen.key``

    .. code-block:: bash

      ssh -A centos@OpsMgr1
      #generate a gen.key file
      openssl rand 24 > /share/gen.key
      cp /share/gen.key /etc/mongodb-mms/
      #copy this generated file to all OpsMgr hosts
      scp /share/gen.key centos@OpsMgr2:/etc/mongodb-mms/opsmgr.key
      scp /share/gen.key centos@OpsMgr3:/etc/mongodb-mms/opsmgr.key
      #make sure you use replace OpsMgr* for the host ip


    - Edit Ops Manager configuration file `/etc/mongodb-mms/conf-mms.properties`

    .. code-block:: bash

      #replace mongo.mongoUri with APPDB replica set connection string
      # mongodb://OpsMgr1:30000,OpsMgr2:30000,OpsMgr3:30000/?replicaSet=APPDB
      sed -i.bak 's/^\(mongo.mongoUri=\).*/\1mongodb:\/\/OpsMgr1\:30000,OpsMgr2\:30000,OpsMgr3\:30000\/\?replicaSet=APPDB/' /etc/mongodb-mms/conf-mms.properties
      #or just use vi

      #repeat the operation on all OpsMgr hosts


    - Launch Ops Manager on all OpsMgr hosts

    .. code-block:: bash

      ssh -A centos@OpsMgr1 'service mongodb-mms start'
      ssh -A centos@OpsMgr2 'service mongodb-mms start'
      ssh -A centos@OpsMgr3 'service mongodb-mms start'

    To validate this exercise the students should be able to:

    - Register admin user credentials and Ops Manager group


3. Install OpsManager Automation Agents
---------------------------------------

At this point **Ops Manager** should be up and running.
Now it's time to install our `Automation Agents`_:

- In the remaining VM, install the automation agent
- Make sure that all nodes are discoverable on the servers dashboard
- Validate that all agents are reporting pings correctly

.. only:: instructor

  .. note::

    You should ask the students to install the agents on the remaining VMs

    - Validate that all nodes are discoverable
    - All agents are reporting data without errors



.. _Ops Manager architecture : https://docs.opsmanager.mongodb.com/current/core/system-overview/
.. _security settings : https://docs.mongodb.com/manual/administration/security-checklist/
.. _configure HA app : https://docs.opsmanager.mongodb.com/current/tutorial/configure-application-high-availability/
.. _offline binary access : https://docs.opsmanager.mongodb.com/current/tutorial/configure-local-mode/
.. _Automation Agents : https://docs.opsmanager.mongodb.com/current/tutorial/nav/install-automation-agent/
