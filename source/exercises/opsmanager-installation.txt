=============================
Lab: Ops Manager Installation
=============================

Premise
-------

Ops Manager is an On-Prem operational solution for the management of MongoDB clusters.

Enables features like:

- Automation
- Backup and Recovery
- Monitoring

Over the course of this lab we will be installing Ops Manager with high
availability and scalability in mind.

.. only:: instructor

  .. note::

    As a reminder, for details on how to setup clusters for this class, see:

    - https://docs.google.com/document/d/1vhA6NvlTsPe1rw_fb7N5NrYzJ78odiHWBd5yf9vPd64

.. include:: /includes/student-notes.rst


Ops Manager HA
--------------

Ops Manager requires a number of servers for high availability (HA).

- Monitoring and backup/recovery are essential for production operations.
- Therefore, it's important to assure high availability for Ops Manager.
- For this we need to follow a specific deployment topology.

.. include:: /includes/student-notes.rst


Ops Manager Scalability
-----------------------

**Why do we need our operations tool to be scalable?**

- The main reason is backup and recovery requirements
- The amount of data individual applications generate will grow
- The number of applications your Ops Manager deployment supports will grow
- Plan to accommodate both forms of growth

.. include:: /includes/student-notes.rst


Ops Manager Architecture Review
-------------------------------

Let's review the `Ops Manager architecture`_ :

.. include:: /figures_local_meta/opsmanager-architecture.txt

.. include:: /includes/student-notes.rst

.. only:: instructor

  .. note::

    Alternative deployments of Ops Manager are available at:

    - https://docs.opsmanager.mongodb.com/current/core/deployments/

    For this diagram raise students attention to the following:

    - Ops Manager is composed out of two main services

      - HTTP Service: Ops Manager Application
      - Backup daemon

    - Ops Manager will collect data from the different agents

      - backup
      - monitoring
      - automation

    - Ops Manager has three main data stores

      - Application DB (MongoDB Cluster)

        - user info
        - monitoring data
        - group data
        - backup job queries
        - backup metadata

      - Backup DB (MongoDB Cluster)

        - OpLog store
        - Sync store

        - Blockstore: data snapshots, divided in small chunks being compressed
          and de-deduplicated
        - or Filestore: data snapshots as files

      - Head Database

        - Keeps track of oplog and initial syncs
        - There's one head database for each backed-up replica set
        - Similar load as a Secondary


Exercise: Architect the Ops Manager Deployment
----------------------------------------------

It's time to set up the our Ops Manager Deployment.
As a team, make a plan for the following:

- Two replica sets of 3 nodes

  - Application Database replica set as **APPDB**
  - Backup Database replica set as **BACKUPDB**

- A redundant service of the Ops Manager Application

  - The hosts that will be supporting the OM App:
    ``opsmgr1``, ``opsmgr2`` and ``opsmgr3``
  - Load Balancer in front of those 3 instances
  - The load balancer is already set up. The name is in the info file

.. include:: /includes/student-notes.rst

.. only:: instructor

  Solution: Architect the Ops Manager Deployment
  ----------------------------------------------

  - 2 possible solutions:

    - each ``opsmgr`` node gets App, BackupDaemon, AppDB and BackupDB
    - each ``opsmgr`` node gets App, BackupDaemon and BackupDB, each ``nodeX``
      node gets AppDB

  - Do we need a replica set to support the Backup Daemon?

    - Yes, you always need one, and we will be using the *Blockstore* part
      of the Backup DB

      - we can use a *Filestore* as an alternative but for the exercise let's
        use the *Blockstore*


Exercise: Configure Ops Manager Application Database
----------------------------------------------------

Ops Manager needs to store data:

.. rst-class:: longlist

  - Configuration of nodes, groups, users
  - Metrics for monitoring
  - Backup metadata and job queries

Also consider relevant `security settings`_ for this database.

From the available machines go ahead and set up a replica set to support the
*Application Database*.

Name this replica set **APPDB**

You can install MongoDB by running:

.. code-block:: bash

    yum install -y /share/downloads/mongodb_packages/mongodb-enterprise-3.4.2-1.el7.x86_64.rpm

.. only:: instructor

  Solution: Configure Ops Manager Application Database
  ----------------------------------------------------

  .. code-block:: bash

    mongod -f /share/etc/appdb.conf

  - The `/share/etc/appdb.conf` file should have the following settings:

  .. code-block:: bash

    cat /share/etc/appdb.conf
    replication:
      replSetName: "APPDB"
      oplogSizeMB: 100
    storage:
      wiredTiger:
        engineConfig:
          cacheSizeGB: 2
          journalCompressor: zlib
    net:
      port: 27001

  .. note::

    Pay attention to:

    - cache size, because you can't run 2 DB with 50% of the memory each

  Solution: Configure Ops Manager Application Database (con't)
  ------------------------------------------------------------

  - Connect to each ``opsmgr`` instance and launch a mongod

  - Once all instances ``mongod`` instances are up initiate the replica set

  .. code-block:: bash

    mongo --host opsmgr1:27001
    > rs.initiate({
      _id: "APPDB",
      members: [
        {_id: 1, host:"opsmgr1:27001"},
        {_id: 2, host:"opsmgr2:27001"},
        {_id: 3, host:"opsmgr3:27001"}
      ]
    })

  .. note::

    - To validate their deployment you should ask students to run
      ``rs.status()`` on one of their APPDB members.



Exercise: Configure Ops Manager Backup Database
-----------------------------------------------

Ops Manager needs to store backup blocks/snaphots, either

- in database
- file system

From the available machines go ahead and set up a replica set to support the
*Backup Database*.

Name this replica set **BACKUPDB**

.. only:: instructor

  Solution: Configure Ops Manager Backup Database
  -----------------------------------------------

  .. code-block:: bash

    mongod -f /share/etc/backupdb.conf

  - The `/share/etc/backupdb.conf` file should have the following settings:

  .. code-block:: bash

    cat /share/etc/backupdb.conf
    replication:
      replSetName: "BACKUPDB"
      oplogSizeMB: 100
    storage:
      wiredTiger:
        engineConfig:
          cacheSizeGB: 2
          journalCompressor: zlib
    net:
      port: 27002

  .. note::

    Pay attention to:

    - cache size, because you can't run 2 DB with 50% of the memory each

  Solution: Configure Ops Manager Backup Database (con't)
  -------------------------------------------------------

  - Connect to each ``opsmgr`` instance and launch a mongod

  - Once all instances ``mongod`` instances are up initiate the replica set

  .. code-block:: bash

    mongo --host opsmgr1:27002
    > rs.initiate({
      _id: "BACKUPDB",
      members: [
        {_id: 1, host:"opsmgr1:27002"},
        {_id: 2, host:"opsmgr2:27002"},
        {_id: 3, host:"opsmgr3:27002"}
      ]
    })


Exercise: Install, Configure and Launch the Ops Manager Service
---------------------------------------------------------------

**Habemus Replica Sets!** Now it's time to launch the **Ops Manager** service.
For this you will need to:

.. rst-class:: longlist

  - Install Ops Manager

    - The files can be found in /share/downloads/opsmgr_packages
    - Follow the instructions to `install from rpm`_

  - Edit Ops Manager configuration ``conf-mms.properties``:

    - Point the config to the replica set: **APPDB**

  - Launch the Ops Manager service
  - Hint: there is a common keyfile shared by all 3 instances

  - You can install Ops Manager by running:

    .. code-block:: bash

        yum install -y /share/downloads/opsmgr_packages/mongodb-mms-3.4.3.402-1.x86_64.rpm

.. only:: instructor

  .. note::

    The next page, first part of the solution, is given in the student
    notes, as this one may prove complicated.

    We are striving for an Highly Available Ops Manager deployment therefore:

    - Before mentioning *again* the HA requirement you may ask students why do
      we need at least 2 ``opsmgr`` nodes?
    - Make sure students use machines that are tagged with Ops Manager


  Solution: Install, Configure and Launch the Ops Manager Service
  ---------------------------------------------------------------

  Details on how to configure HA `configure HA app`_

  Generate a keyfile ``gen.key`` for the 3 hosts:

  .. rst-class:: longcode

    .. code-block:: bash

      # Make sure you use replace opsmgr for the host ip
      ssh -A centos@opsmgr1

      # Install ops manager server
      yum install -y /share/downloads/opsmgr_packages/mongodb-mms-3.4.3.402-1.x86_64.rpm

      # Edit the configuration options
      vi /opt/mongodb/mms/conf/conf-mms.properties

      # Generate a gen.key file
      openssl rand 24 > /share/gen.key
      cp /share/gen.key /etc/mongodb-mms/

      # Copy this generated file to all opsmgr hosts
      # You might need to first scp to a folder you have permissions on
      scp /share/gen.key centos@opsmgr2:/etc/mongodb-mms/
      scp /share/gen.key centos@opsmgr3:/etc/mongodb-mms/


  Solution: Install, Configure and Launch the Ops Manager Service (con't)
  -----------------------------------------------------------------------

  - Edit Ops Manager configuration file ``/opt/mms/conf-mms.properties``

  .. code-block:: bash

    # Replace mongo.mongoUri with APPDB replica set connection string
    # e.g., mongodb://opsmgr1:27001,opsmgr2:27001,opsmgr3:27001/?replicaSet=APPDB
    sed -i.bak "s/^\(mongo.mongoUri=\).*/\1mongodb:\/\/opsmgr1\:27001,opsmgr2\:27001, \
    opsmgr3\:27001\/\?replicaSet=APPDB/" /opt/mms/conf-mms.properties

    # Repeat the operation on all opsmgr hosts

  - Launch Ops Manager on all ``opsmgr`` hosts

  .. code-block:: bash

    ssh -A centos@opsmgr1 "service mongodb-mms start"
    ssh -A centos@opsmgr2 "service mongodb-mms start"
    ssh -A centos@opsmgr3 "service mongodb-mms start"

  .. note::

    To validate this exercise the students should be able to:

    - Connect to the Ops Manager Installation via their load balancer URL
    - Register admin user credentials and Ops Manager group

    You can go ahead and walk them through the series of Ops Manager setup
    screens.


Exercise: Install Ops Manager Automation Agents
-----------------------------------------------

At this point **Ops Manager** should be up and running.
Now it's time to install our `Automation Agents`_:

- In the remaining VMs (node1, node2, etc) install the automation agent
- Make sure that all nodes are discoverable on the server's dashboard
- Validate that all agents are reporting pings correctly

.. only:: instructor

  .. note::

    You should ask the students to install the agents on the remaining VMs

    - Validate that all nodes are discoverable
    - All agents are reporting data without errors

    You'll also want to make sure that students successfully changed their
    instance hostnames to the ``nodeX`` form. This enables them to use the
    certificates that are on the machines for later labs.


.. _Ops Manager architecture : https://docs.opsmanager.mongodb.com/current/core/system-overview/
.. _security settings : https://docs.mongodb.com/manual/administration/security-checklist/
.. _configure HA app : https://docs.opsmanager.mongodb.com/current/tutorial/configure-application-high-availability/
.. _offline binary access : https://docs.opsmanager.mongodb.com/current/tutorial/configure-local-mode/
.. _Automation Agents : https://docs.opsmanager.mongodb.com/current/tutorial/nav/install-automation-agent/
.. _install from rpm : https://docs.opsmanager.mongodb.com/current/tutorial/install-on-prem-with-rpm-packages/#install-the-onprem-package-on-each-server-being-used-for-onprem
