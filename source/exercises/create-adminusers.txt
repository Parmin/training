=========================
Lab: Administration Users
=========================


Premise
-------

Security roles often span different levels:

- Superuser roles
- DBA roles
- System administration roles
- User administration roles
- Application roles

In this lab we will look at several types of administration roles.


User Administration user
-----------------------

- Generally, in complex systems, we need someone to administer users.
- This role should be different from a ``root`` level user for a few reasons.

- ``root`` level users should be used has last resort user
- Administration of users is generally related with security officers


Create User Admin user
----------------------

Create a user that will administer other users:

.. code-block:: javascript

  db.createUser(
  {
    user: "securityofficer",
    pwd: "doughnuts",
    customData: { notes: ["admin", "the person that adds other persons"] },
    roles: [
      { role: "userAdminAnyDatabase", db: "admin" }
      ]
  })

.. only:: instructor

   .. note::

      Make sure that users understand the importance of this role:

      - What happens when we need to add a new user?
      - What happens when someone loses their password?
      - What happens when we need to remove a user?

      These are very specific operations.
      Also make note that we can be more granular if we want a
      specific user to administer only specific database users using role:

      .. code-block:: javascript

        { role: "userAdmin", db: "justthisdb" }


Create DBA user
---------------

DBAs are generally concerned with maintenance operations in the database.

- Optimization of queries
- System resources utilization
- Statistics

.. code-block:: javascript

  db.createUser(
  {
    user: "dba",
    pwd: "i+love+indexes",
    customData: { notes: ["admin", "the person that admins databases"] },
    roles: [
      { role: "dbAdmin", db: "X" }
      ]
  })

If want to make sure this DBA can administer all databases of the system,
which role(s) should he have? See the `MongoDB documentation <https://docs.mongodb.org/manual/reference/built-in-roles/#database-administration-roles>`_.

.. only:: instructor

   .. note::

      The answer for this question is `dbAdminAnyDatabase`

      In this section we should explore the existing built-in roles for database administrators. Raise the some of the following questions.

      - What differences exist between ``dbAdmin`` and ``dbOwner`` roles?
      - When should we apply one or another?


Create a Cluster Admin user
---------------------------

Cluster administration is generally an operational role that differs
from DBA in the sense that is more focussed on the deployment and
cluster node management.

For a team managing a cluster, what roles enable individuals to do the following?

- Add and remove replica nodes
- Manage shards
- Do backups
- Cannot read data from any application database

.. only:: instructor

   .. note::

      This question requires a little more thought since the correct answer actually requires two different roles:

      .. code-block:: javascript

        use admin
        db.createUser(
        {
          user: "theITguy",
          pwd: "i+love+networkprotocols",
          customData: { notes: ["admin", "the person admins machines"] },
          roles: ["clusterAdmin", "backup"]
        })

      Students can also come up with a custom user-defined role that
      should be given credit but discouraged given that we have a
      set of roles that perform the wanted operation.
