Exercise: Array Operators
-------------------------

Experiment with the following updates.

.. code-block:: javascript

   db.testcol.drop()   
   for (i=1; i<=5; i++) { db.testcol.insert( 
       { _id : i, a : i, b: [ 1, 2, 3, 3, "NA", 6 ] } ) } 

   db.testcol.update( { _id : 1 }, { $push : { b : 3 } } ) 
   db.testcol.update( { _id : 2 }, { $pushAll : { b : [ 1, 2, 3 ] } } )

   db.testcol.update( { _id : 2 }, { $pop : { b : "" } } )  

   db.testcol.update( { _id : 3 }, { $pull : { b : 3 } } )  
   db.testcol.update( { _id : 4 }, 
                      { $pullAll : { b : [ 1, 2, "NA", 4 ] } } )  

   db.testcol.update( { _id : 5 }, { $addToSet { b : 2 } } )  
   db.testcol.update( { _id : 5 }, { $addToSet { b : 4 } } )  


.. only:: instructor

   .. note::
   
      - If you have time you might want to show the students:

        .. code-block:: javascript

           db.testcol.update( { _id : 1 }, { $push : { b : [ 3, 12 ] } } )  
 
      - In ``{ $pop : { b : "" } }``, the value passed for ``b`` is just a placeholder. Most values will work fine.
      - In ``{ $pullAll : { b : [ 1, 2, "NA", 4 ] } }`` the value ``4`` is not present in the array found in ``b``. This has no effect on the update.


