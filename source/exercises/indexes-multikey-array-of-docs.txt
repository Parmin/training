Exercise: Array of Documents, Part 1
------------------------------------

Create a collection and add an index on the ``x`` field:

.. code-block:: javascript

   db.testcol.drop()
   b = [ { x : [ { name : "Alice", number : 1 }, { name : "Bob", number : 2 },
                 { name : "Cherry", number : 3 } ] },
         { x : [ { name : "Cherry", number : 3 },
                 { name : "Dan", number : 4 } ] },
         { x : [ { name : "Dan", number : 4 },
                 { name : "Erica", number : 5 } ] },
         { x : { name : "Cherry", number : 3 } },
               { name : "Dan", number : 4 } ]
   db.testcol.insert(b)
   db.testcol.ensureIndex( { x : 1 } )
   db.testcol.find()

.. only:: instructor

   .. note::

      - In this collection there are four documents. 
      - In each document is an array, ``x``, containing subdocuments.
      - Each subdocument has a name and number in it 
      - Always the same number for each name.


Exercise: Array of Documents, Part 2
------------------------------------

For each of the three queries below:

- How many documents will be returned?
- Will it use our multi-key index? Why or why not?
- If a query will not use the index, which index will it use?

.. code-block:: javascript

   db.testcol.find( { x : { name : "Cherry", number : 3 } } )
   db.testcol.find( { x : { number : 3 } } )
   db.testcol.find( { "x.number" : 3 } )

.. only:: instructor

  .. note::

     .. code-block:: javascript

        // 3 documents
        db.testcol.find( { x : { name : "Cherry", number : 3 } } )  
        // Used the multi-key index. We pass a complete document for ``x``.
        db.testcol.find( { x : { name : "Cherry", number : 3 } } ).explain()  

        // 3 documents
        db.testcol.find( { "x.number" : 3 } )  
        // Does not use the multi-key index.
        // ``x.number`` is only part of the document that is indexed.
        db.testcol.find( { "x.number" : 3 } ).explain()
     
        // We would need to add an index such as this.
        db.testcol.ensureIndex( { "x.number" : 1 } )
        db.testcol.find( { "x.number" : 3 } ).explain()  
