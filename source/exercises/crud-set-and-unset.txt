Exercise: $set and $unset
-------------------------------

Experiment with the following. Do a ``find()`` after each update to view the results.

.. code-block:: javascript

   db.testcol.drop()
   for (i=1; i<=5; i++) { db.testcol.insert( { _id : i, a : i, b : i } ) }

   db.testcol.update( { _id : 3 }, { $set : { a : 6 } } )  

   db.testcol.update( { _id : 5 } , { $set : { c : 5 } } ) 

   db.testcol.update( { _id : 5 } , { $set : { c : 7 , a : 7 } } )

   db.testcol.update( { _id : 5 } , { d : 4 } )

   db.testcol.update( { _id : 4 } , { $unset : a } )

.. only:: instructor

   .. note::

      - db.testcol.update( { _id : 3 }, { $set : { a : 6 } } ) just updates the ``a`` field.
      - db.testcol.update( { _id : 5 }, { $set : { c : 5 } } ) adds a ``c`` field to the matching document.
      - db.testcol.update( { _id : 5 }, { $set : { c : 7 , a : 7 } } ) modifies only the ``c`` and ``a`` fields.
      - db.testcol.update( { _id : 5 }, { d : 4 } ) is the type of update that is probably a mistake. 

        - It will replace the document with _id : 5 in its entirety.
	- The new document will be, { d : 4 }.

      - db.testcol.update( { _id : 4 }, { $unset : a } ) removes the ``a`` field.
