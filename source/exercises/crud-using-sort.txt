Exercise: Using ``sort()``
--------------------------

Experiment with the following sort commands.

.. code-block:: javascript

   db.testcol.drop()
   for (i=1; i<=10000; i++) { 
       db.testcol.insert( { a : Math.floor( Math.random() * 100 + 1 ),
                            b : Math.floor( Math.random() * 100 + 1 ) } ) 
   }
   db.testcol.find()                            

   db.testcol.find().sort( { a : 1 } )          
   db.testcol.find().sort( { a : -1 } )         

   db.testcol.find().sort( { a : 1, b : 1 } )   
   db.testcol.find().sort( { b : 1, a : 1 } )   

   db.testcol.find().sort( { $natural : 1 } )  

.. include:: /includes/student-notes.rst

.. only:: instructor

   .. note::

      - Sort can be executed on a cursor until the point where the first document is actually read.
      - $natural order is just the order on disk.
      - If you never delete any documents or change their size, this will be the same order in which you inserted them.
      - Sorting two or more fields breaks the convention of javascript objects that key / value pairs are unordered.
      - In some drivers you may need to take special care with this.
      - For example, in Python, you would usually query with a dictionary. 
      - But dictionaries are unordered in Python, so you would use an array of tuples instead.

