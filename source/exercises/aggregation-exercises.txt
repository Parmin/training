===================================
Exercise: Aggregating Zip Code Data
===================================

For the following exercises, import the zips.json file from the USB stick:

.. code-block:: javascript
   
   mongoimport -d test -c zips --drop zips.json


1. Calculate the average population of cities in California (abbreviation CA) and New York (NY) (taken together) with populations over 25,000 
---------------------------------------------------------------------------------------------------------------------------------------------

For this problem, assume that a city name that appears in more than one state represents two separate cities. 

Please note:

* Different states might have the same city name.
* A city might have multiple zip codes.

.. only:: instructor

   .. note::

      - db.zips.aggregate([ {$match: {state: {$in: ["CA", "NY"]}}}, {$group: { _id: {state: "$state", city: "$city"}, pop: {$sum: "$pop"} } }, {$match: {pop: {$gt: 25000}} }, {$group: { _id: null, pop: {$avg: "$pop"} } } ])


.. include:: /includes/student-notes.rst
           

2. Calculate the number of people who live in a zip code in the US where the city starts with a digit
-----------------------------------------------------------------------------------------------------
   
The project operator can extract the first digit from any field. For example, to extract the first digit from the city field, you could write this query:
   
.. code-block:: javascript

   db.zips.aggregate([
       {$project: 
        {
      first_char: {$substr : ["$city",0,1]},
        }    
      }
   ])

Using the aggregation framework, calculate the sum total of people who are living in a zip code where the city starts with a digit.
   
.. only:: instructor

   .. note::

      .. code-block:: javascript

         db.zips.aggregate( [ 
            { $project : {
               "first_char": { "$substr" : [ "$city", 0, 1] },
               "pop" : 1,
               "city" : "$city",
               "zip" : "$_id",
               "state" : 1
            }},
            { $match : {
               "first_char" : { $in : [ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] }
            }},
            {
               "$group" : { "_id" : null, "population" : { $sum : "$pop"}}
            }
         ])


.. include:: /includes/student-notes.rst
   
