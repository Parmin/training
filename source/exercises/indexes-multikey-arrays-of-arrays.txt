Exercise: Array of Arrays, Part 1
---------------------------------

Add some documents and create an index:

.. code-block:: javascript

   db.testcol.drop()
   db.testcol.ensureIndex( { x : 1 } )
   c = [ { x : [ [ 1, 2 ], [ 2, 3 ], [ 3, 4] ] }, 
         { x : [ [ 3, 4 ], [ 4, 5 ] ] },
         { x : [ [ 4, 5 ], [ 5, 6 ] ] },
         { x : [ 3, 4 ] },
         { x : [ 4, 5 ] } ] 
   db.testcol.insert(c)
   db.testcol.ensureIndex( { x : 1 } )
   db.testcol.find()


Exercise: Array of Arrays, Part 2
---------------------------------

For each of the queries below:

- How many documents will be returned? 
- Does the query use the multi-key index? Why or why not?
- If the query does not use the index, what is an index it could use?

.. code-block:: javascript

   db.testcol.find( { x : [ 3, 4 ] } )  
   db.testcol.find( { x : 3 } )
   db.testcol.find( { "x.1" : [ 4, 5 ] } )
   db.testcol.find( { "x.1" : 4 } )

.. only:: instructor

   .. note::

      .. code-block:: javascript

         // 3 documents
         db.testcol.find( { x : [ 3, 4 ] } )  
         // Uses the multi-key index
         db.testcol.find( { x : [ 3, 4 ] } ).explain()  

         // One document found, where the element of x is just a number.
         db.testcol.find( { x : 3 } )  
         // Used the index
         db.testcol.find( { x : 3 } ).explain()  

         db.testcol.find( { "x.1" : [ 4, 5 ] } ).explain() 
         // Does not use the multi-key index, because it is naive to position.
         db.testcol.find( { "x.1" : 4 } ).explain()
