{
  "Description" : "This is a stack that creates the resources for one team. It will be calling a sub stack for each instance to be created.",

  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "TeamNumber": {
      "Description": "Team number, 1 to 16. Subnet for this team will be 10.0.X.0",
      "Type": "String"
    },
    "KeyPair": {
      "Description": "Amazon EC2 Key Pair, either AdvancedAdministrator or another one to distribute to the teams",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "TestMode": {
      "Description": "Run in test mode, using less resources",
      "Type": "String",
      "AllowedValues": [ "true", "false" ],
      "Default": "false"
    }
  },

  "AWSTemplateFormatVersion": "2010-09-09",
  "Metadata": {
    "AWS::CloudFormation::Designer": {
      "77454457-112c-44b2-b52b-56d152ac7381": {
        "size": {
          "width": 590,
          "height": 240
        },
        "position": {
          "x": 50,
          "y": 70
        },
        "z": 0,
        "embeds": []
      }
    }
  },

  "Conditions" : {
    "IsNotTestMode": {"Fn::Equals": [{"Ref": "TestMode"}, "false"]}
  },

  "Mappings": {
    "Constants" : {
      "SubnetMasks" : {
        "desc": "Each team gets to have a different subnet in which all their instances are located, they used to be differents CIDs, but not anymore, so we may not need this mapping anymore",
        "0": "10.0.0.0/24",
        "1": "10.0.0.0/24",
        "2": "10.0.0.0/24",
        "3": "10.0.0.0/24",
        "4": "10.0.0.0/24",
        "5": "10.0.0.0/24",
        "6": "10.0.0.0/24",
        "7": "10.0.0.0/24",
        "8": "10.0.0.0/24",
        "9": "10.0.0.0/24"
      }
    },
    "Params": {
      "AMITemplate": {
        "Description": "Use templates from the test area or not, based on 'TestMode'",
        "true":  "https://s3.amazonaws.com/mongodb-training/advadmin-devel/cf-templates/advadmin-host.template",
        "false": "https://s3.amazonaws.com/mongodb-training/advadmin/cf-templates/advadmin-host.template"
      },
      "OpsMgrInstanceType": {
        "Description": "Use smaller instance in 'TestMode'",
        "true": "t2.micro",
        "false": "r3.large"
      },
      "DataInstanceType": {
        "true": "t2.micro",
        "false": "m3.medium"
      }
    }
  },

  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "CidrBlock": "10.0.0.0/16",
        "Tags" : [
          { "Key": "Application", "Value": { "Ref": "AWS::StackName" } }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "1f83700f-7dfd-4c10-88cc-8a6c7dc0eab0"
        }
      }
    },

    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          { "Key": "Application", "Value": { "Ref": "AWS::StackName" } }
        ]
      }
    },

    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "InternetGatewayId": { "Ref": "InternetGateway" }
      }
    },

    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "Tags": [
          { "Key": "Application", "Value": { "Ref": "AWS::StackName" } }
        ]
      }
    },

    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "PublicRouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "InternetGateway" }
      }
    },

    "SSHandHTTPSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "GroupDescription": "Allow access from outside HTTP and SSH traffic, all from inside",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "-1",
            "CidrIp": "10.0.0.0/16"
          }
        ],
        "Tags": [
          { "Key": "Application", "Value": { "Ref": "AWS::StackName" } }
        ]
      }
    },

    "Subnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap" : [ "Constants", "SubnetMasks", { "Ref": "TeamNumber" } ]
        },
        "Tags": [
          { "Key": "Team", "Value": { "Ref": "TeamNumber" } }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "77454457-112c-44b2-b52b-56d152ac7381"
        }
      }
    },

    "RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "Subnet" },
        "RouteTableId": { "Ref": "PublicRouteTable" }
      }
    },

    "opsmgr1": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": { "Fn::FindInMap" : [ "Params", "AMITemplate", { "Ref": "TestMode" } ] },
        "Parameters": {
          "InstanceType": { "Fn::FindInMap" : [ "Params", "OpsMgrInstanceType", { "Ref": "TestMode" } ] },
          "IP": "10.0.0.21",
          "KeyPair": {"Ref": "KeyPair"},
          "Subnet": {"Ref" : "Subnet"},
          "SSHandHTTPSecurityGroup": { "Ref": "SSHandHTTPSecurityGroup" },
          "TestMode": { "Ref": "TestMode" }
        },
        "TimeoutInMinutes": "10",
        "Tags": [
          { "Key": "Team", "Value": { "Ref": "TeamNumber" } },
          { "Key": "Role", "Value": "opsmgr1" }
        ]
      }
    },

    "opsmgr2": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": { "Fn::FindInMap" : [ "Params", "AMITemplate", { "Ref": "TestMode" } ] },
        "Parameters": {
          "InstanceType": { "Fn::FindInMap" : [ "Params", "OpsMgrInstanceType", { "Ref": "TestMode" } ] },
          "IP": "10.0.0.22",
          "KeyPair": { "Ref": "KeyPair" },
          "Subnet": {"Ref" : "Subnet"},
          "SSHandHTTPSecurityGroup": { "Ref": "SSHandHTTPSecurityGroup" },
          "TestMode": { "Ref": "TestMode" }
        },
        "TimeoutInMinutes": "10",
        "Tags": [
          { "Key": "Team", "Value": { "Ref": "TeamNumber" } },
          { "Key": "Role", "Value": "opsmgr2" }
        ]
      }
    },

    "opsmgr3": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": { "Fn::FindInMap" : [ "Params", "AMITemplate", { "Ref": "TestMode" } ] },
        "Parameters": {
          "InstanceType": { "Fn::FindInMap" : [ "Params", "OpsMgrInstanceType", { "Ref": "TestMode" } ] },
          "IP": "10.0.0.23",
          "KeyPair": { "Ref": "KeyPair" },
          "Subnet": {"Ref" : "Subnet"},
          "SSHandHTTPSecurityGroup": { "Ref": "SSHandHTTPSecurityGroup" },
          "TestMode": { "Ref": "TestMode" }
        },
        "TimeoutInMinutes": "10",
        "Tags": [
          { "Key": "Team", "Value": { "Ref": "TeamNumber" } },
          { "Key": "Role", "Value": "opsmgr3" }
        ]
      }
    },

    "node1": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": { "Fn::FindInMap" : [ "Params", "AMITemplate", { "Ref": "TestMode" } ] },
        "Parameters": {
          "InstanceType": { "Fn::FindInMap" : [ "Params", "DataInstanceType", { "Ref": "TestMode" } ] },
          "IP": "10.0.0.101",
          "KeyPair": { "Ref": "KeyPair" },
          "Subnet": {"Ref" : "Subnet"},
          "SSHandHTTPSecurityGroup": { "Ref": "SSHandHTTPSecurityGroup" },
          "TestMode": { "Ref": "TestMode" }
        },
        "TimeoutInMinutes": "10",
        "Tags": [
          { "Key": "Team", "Value": { "Ref": "TeamNumber" } },
          { "Key": "Role", "Value": "node1" }
        ]
      }
    },

    "node2": {
      "Type": "AWS::CloudFormation::Stack",
      "Condition": "IsNotTestMode",
      "Properties": {
        "TemplateURL": { "Fn::FindInMap" : [ "Params", "AMITemplate", { "Ref": "TestMode" } ] },
        "Parameters": {
          "InstanceType": { "Fn::FindInMap" : [ "Params", "DataInstanceType", { "Ref": "TestMode" } ] },
          "IP": "10.0.0.102",
          "KeyPair": { "Ref": "KeyPair" },
          "Subnet": {"Ref" : "Subnet"},
          "SSHandHTTPSecurityGroup": { "Ref": "SSHandHTTPSecurityGroup" },
          "TestMode": { "Ref": "TestMode" }
        },
        "TimeoutInMinutes": "10",
        "Tags": [
          { "Key": "Team", "Value": { "Ref": "TeamNumber" } },
          { "Key": "Role", "Value": "node2" }
        ]
      }
    },

    "node3": {
      "Type": "AWS::CloudFormation::Stack",
      "Condition": "IsNotTestMode",
      "Properties": {
        "TemplateURL": { "Fn::FindInMap" : [ "Params", "AMITemplate", { "Ref": "TestMode" } ] },
        "Parameters": {
          "InstanceType": { "Fn::FindInMap" : [ "Params", "DataInstanceType", { "Ref": "TestMode" } ] },
          "IP": "10.0.0.103",
          "KeyPair": { "Ref": "KeyPair" },
          "Subnet": {"Ref" : "Subnet"},
          "SSHandHTTPSecurityGroup": { "Ref": "SSHandHTTPSecurityGroup" },
          "TestMode": { "Ref": "TestMode" }
        },
        "TimeoutInMinutes": "10",
        "Tags": [
          { "Key": "Team", "Value": { "Ref": "TeamNumber" } },
          { "Key": "Role", "Value": "node3" }
        ]
      }
    },

    "node4": {
      "Type": "AWS::CloudFormation::Stack",
      "Condition": "IsNotTestMode",
      "Properties": {
        "TemplateURL": { "Fn::FindInMap" : [ "Params", "AMITemplate", { "Ref": "TestMode" } ] },
        "Parameters": {
          "InstanceType": { "Fn::FindInMap" : [ "Params", "DataInstanceType", { "Ref": "TestMode" } ] },
          "IP": "10.0.0.104",
          "KeyPair": { "Ref": "KeyPair" },
          "Subnet": {"Ref" : "Subnet"},
          "SSHandHTTPSecurityGroup": { "Ref": "SSHandHTTPSecurityGroup" },
          "TestMode": { "Ref": "TestMode" }
        },
        "TimeoutInMinutes": "10",
        "Tags": [
          { "Key": "Team", "Value": { "Ref": "TeamNumber" } },
          { "Key": "Role", "Value": "node4" }
        ]
      }
    },

    "node5": {
      "Type": "AWS::CloudFormation::Stack",
      "Condition": "IsNotTestMode",
      "Properties": {
        "TemplateURL": { "Fn::FindInMap" : [ "Params", "AMITemplate", { "Ref": "TestMode" } ] },
        "Parameters": {
          "InstanceType": { "Fn::FindInMap" : [ "Params", "DataInstanceType", { "Ref": "TestMode" } ] },
          "IP": "10.0.0.105",
          "KeyPair": { "Ref": "KeyPair" },
          "Subnet": {"Ref" : "Subnet"},
          "SSHandHTTPSecurityGroup": { "Ref": "SSHandHTTPSecurityGroup" },
          "TestMode": { "Ref": "TestMode" }
        },
        "TimeoutInMinutes": "10",
        "Tags": [
          { "Key": "Team", "Value": { "Ref": "TeamNumber" } },
          { "Key": "Role", "Value": "node5" }
        ]
      }
    },

    "node6": {
      "Type": "AWS::CloudFormation::Stack",
      "Condition": "IsNotTestMode",
      "Properties": {
        "TemplateURL": { "Fn::FindInMap" : [ "Params", "AMITemplate", { "Ref": "TestMode" } ] },
        "Parameters": {
          "InstanceType": { "Fn::FindInMap" : [ "Params", "DataInstanceType", { "Ref": "TestMode" } ] },
          "IP": "10.0.0.106",
          "KeyPair": { "Ref": "KeyPair" },
          "Subnet": {"Ref" : "Subnet"},
          "SSHandHTTPSecurityGroup": { "Ref": "SSHandHTTPSecurityGroup" },
          "TestMode": { "Ref": "TestMode" }
        },
        "TimeoutInMinutes": "10",
        "Tags": [
          { "Key": "Team", "Value": { "Ref": "TeamNumber" } },
          { "Key": "Role", "Value": "node6" }
        ]
      }
    },

    "node7": {
      "Type": "AWS::CloudFormation::Stack",
      "Condition": "IsNotTestMode",
      "Properties": {
        "TemplateURL": { "Fn::FindInMap" : [ "Params", "AMITemplate", { "Ref": "TestMode" } ] },
        "Parameters": {
          "InstanceType": { "Fn::FindInMap" : [ "Params", "DataInstanceType", { "Ref": "TestMode" } ] },
          "IP": "10.0.0.107",
          "KeyPair": { "Ref": "KeyPair" },
          "Subnet": {"Ref" : "Subnet"},
          "SSHandHTTPSecurityGroup": { "Ref": "SSHandHTTPSecurityGroup" },
          "TestMode": { "Ref": "TestMode" }
        },
        "TimeoutInMinutes": "10",
        "Tags": [
          { "Key": "Team", "Value": { "Ref": "TeamNumber" } },
          { "Key": "Role", "Value": "node7" }
        ]
      }
    },

    "node8": {
      "Type": "AWS::CloudFormation::Stack",
      "Condition": "IsNotTestMode",
      "Properties": {
        "TemplateURL": { "Fn::FindInMap" : [ "Params", "AMITemplate", { "Ref": "TestMode" } ] },
        "Parameters": {
          "InstanceType": { "Fn::FindInMap" : [ "Params", "DataInstanceType", { "Ref": "TestMode" } ] },
          "IP": "10.0.0.108",
          "KeyPair": { "Ref": "KeyPair" },
          "Subnet": {"Ref" : "Subnet"},
          "SSHandHTTPSecurityGroup": { "Ref": "SSHandHTTPSecurityGroup" },
          "TestMode": { "Ref": "TestMode" }
        },
        "TimeoutInMinutes": "10",
        "Tags": [
          { "Key": "Team", "Value": { "Ref": "TeamNumber" } },
          { "Key": "Role", "Value": "node8" }
        ]
      }
    },

    "node9": {
      "Type": "AWS::CloudFormation::Stack",
      "Condition": "IsNotTestMode",
      "Properties": {
        "TemplateURL": { "Fn::FindInMap" : [ "Params", "AMITemplate", { "Ref": "TestMode" } ] },
        "Parameters": {
          "InstanceType": { "Fn::FindInMap" : [ "Params", "DataInstanceType", { "Ref": "TestMode" } ] },
          "IP": "10.0.0.109",
          "KeyPair": { "Ref": "KeyPair" },
          "Subnet": {"Ref" : "Subnet"},
          "SSHandHTTPSecurityGroup": { "Ref": "SSHandHTTPSecurityGroup" },
          "TestMode": { "Ref": "TestMode" }
        },
        "TimeoutInMinutes": "10",
        "Tags": [
          { "Key": "Team", "Value": { "Ref": "TeamNumber" } },
          { "Key": "Role", "Value": "node9" }
        ]
      }
    },

    "node10": {
      "Type": "AWS::CloudFormation::Stack",
      "Condition": "IsNotTestMode",
      "Properties": {
        "TemplateURL": { "Fn::FindInMap" : [ "Params", "AMITemplate", { "Ref": "TestMode" } ] },
        "Parameters": {
          "InstanceType": { "Fn::FindInMap" : [ "Params", "DataInstanceType", { "Ref": "TestMode" } ] },
          "IP": "10.0.0.110",
          "KeyPair": { "Ref": "KeyPair" },
          "Subnet": {"Ref" : "Subnet"},
          "SSHandHTTPSecurityGroup": { "Ref": "SSHandHTTPSecurityGroup" },
          "TestMode": { "Ref": "TestMode" }
        },
        "TimeoutInMinutes": "10",
        "Tags": [
          { "Key": "Team", "Value": { "Ref": "TeamNumber" } },
          { "Key": "Role", "Value": "node10" }
        ]
      }
    },

    "node11": {
      "Type": "AWS::CloudFormation::Stack",
      "Condition": "IsNotTestMode",
      "Properties": {
        "TemplateURL": { "Fn::FindInMap" : [ "Params", "AMITemplate", { "Ref": "TestMode" } ] },
        "Parameters": {
          "InstanceType": { "Fn::FindInMap" : [ "Params", "DataInstanceType", { "Ref": "TestMode" } ] },
          "IP": "10.0.0.111",
          "KeyPair": { "Ref": "KeyPair" },
          "Subnet": {"Ref" : "Subnet"},
          "SSHandHTTPSecurityGroup": { "Ref": "SSHandHTTPSecurityGroup" },
          "TestMode": { "Ref": "TestMode" }
        },
        "TimeoutInMinutes": "10",
        "Tags": [
          { "Key": "Team", "Value": { "Ref": "TeamNumber" } },
          { "Key": "Role", "Value": "node11" }
        ]
      }
    },

    "node12": {
      "Type": "AWS::CloudFormation::Stack",
      "Condition": "IsNotTestMode",
      "Properties": {
        "TemplateURL": { "Fn::FindInMap" : [ "Params", "AMITemplate", { "Ref": "TestMode" } ] },
        "Parameters": {
          "InstanceType": { "Fn::FindInMap" : [ "Params", "DataInstanceType", { "Ref": "TestMode" } ] },
          "IP": "10.0.0.112",
          "KeyPair": { "Ref": "KeyPair" },
          "Subnet": {"Ref" : "Subnet"},
          "SSHandHTTPSecurityGroup": { "Ref": "SSHandHTTPSecurityGroup" },
          "TestMode": { "Ref": "TestMode" }
        },
        "TimeoutInMinutes": "10",
        "Tags": [
          { "Key": "Team", "Value": { "Ref": "TeamNumber" } },
          { "Key": "Role", "Value": "node12" }
        ]
      }
    },

    "OpsMgrLB": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Instances": [
          { "Fn::GetAtt": [ "opsmgr1", "Outputs.InstanceID" ] },
          { "Fn::GetAtt": [ "opsmgr2", "Outputs.InstanceID" ] },
          { "Fn::GetAtt": [ "opsmgr3", "Outputs.InstanceID" ] }
        ],
        "HealthCheck": {
          "HealthyThreshold": "2",
          "UnhealthyThreshold": "4",
          "Interval": "15",
          "Target": "HTTP:8080/user/login",
          "Timeout": "10"
        },
        "Listeners": [{
          "Protocol": "HTTP",
          "LoadBalancerPort": "80",
          "InstanceProtocol": "HTTP",
          "InstancePort": "8080"
        }],
        "Scheme": "internet-facing",
        "SecurityGroups" : [ { "Ref": "SSHandHTTPSecurityGroup" } ],
        "Subnets": [ { "Ref": "Subnet" } ],
        "Tags": [
          { "Key": "Team", "Value": { "Ref": "TeamNumber" } },
          { "Key": "Application", "Value": { "Ref": "AWS::StackName" } }
        ]
      }
    }

  },

  "Outputs": {
    "TeamNumber" : {
      "Value": { "Ref": "TeamNumber" },
      "Description": "Team Number"
    },
    "KeyPair": {
      "Value": { "Ref": "KeyPair" },
      "Description": "Key/Pair to access the hosts"
    },
    "LoadBalancerHostName": {
      "Value": {
        "Fn::GetAtt": [ "OpsMgrLB", "DNSName" ]
      },
      "Description": "Load Balancer Public Name"
    },
    "SSHandHTTPSecurityGroup": {
      "Value": { "Ref": "SSHandHTTPSecurityGroup" },
      "Description": "VPC Security Group for HTTP/SSH access"
    },
    "VPC": {
      "Value": { "Ref": "VPC" },
      "Description": "Main VPC"
    },
    "Subnet": {
      "Value": {
        "Ref": "Subnet"
      },
      "Description": "Subnet"
    },
    "SubnetMask": {
      "Value": {
        "Fn::FindInMap" : [ "Constants", "SubnetMasks", { "Ref": "TeamNumber" } ]
      },
      "Description": "Subnet Mask"
    },
    "PublicRouteTable": {
      "Value": { "Ref": "PublicRouteTable" },
      "Description": "Route Table for the VPC"
    }
  }
}
