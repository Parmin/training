========
Sharding
========


This chapter is incomplete and still under development
------------------------------------------------------


Notes from Alex's session
-------------------------

- sharding components
  - shards
  - config metadata
  - shard key
  - mongos
  - balancer

- I will show you where to find the information, instead of dropping it on you.

- why we use sharding?
  - scaling
  - read locality, write locality
  - time to restore a shard, may be smaller than a large db

- reasonable limit: 2-5 TB before sharding

- replica set is about the same perf as 1.5 shards

- the field for the shard key can not be null for any document

- which type of index can you use for a shard key, or not (geo, text, )

- create 100 chunks (empty), see how long it takes to transfer 50 of them

- exercise good shard key (no context apart from address book)

- use one lookup collection to trade 1 scatter/gather for 2 targeted queries


What was missing from his presentation
--------------------------------------

- initial sync of 5TB could be long in 3.2 and less
- we use sharding for offloading old data to old/smaller hardware
- don't read from secondaries in a sharded cluster (was covered at the end)
- uniqueness of index on sharded clusters
- good schema to show that scatter gather does not scale
- if you have:
  - write heavy system, the worst shard key is monotically increasing
  - read only system, the worst shard key is not targeting queries


Learning Objectives
-------------------

- lost functionality with sharding


Splitting chunks vs moving chunks
---------------------------------

- Things changed a lot in 3.4
- Splitting done by mongos, moving chunks done by config server


How do you know a split must happen?
------------------------------------


How many mongos should a deployment have?
-----------------------------------------

The following are only guidelines:

- one per app server
- up to 50, after that one mongos for few app
- run the mongos on the same machine as the app
- specify few mongos in the connection string for high availability


Where does a sort happen
------------------------

- agg vs non-agg
- merge sort
- last stage

.. only:: instructor

  .. note::

    https://docs.mongodb.com/manual/core/sharded-cluster-query-router/#sorting


Case study: Associated Press
----------------------------

- few writes
- many reads
- local reads per time zone

What is a good shard key for the articles?


Common Issues
-------------


What functionality is lost by sharding
--------------------------------------

- secondary indexes may not scale, because they are scatter-gather if they don't start with the shard key
- "unique" indexes
- must manage the unicity of the _id at the application level


Main Differences in Versions prior to 3.4
-----------------------------------------


References
----------


To Know More
------------
