====================
Performance Tutorial
====================


Learning Objectives
-------------------

Upon completing this module students should understand:

- The tools MongoDB provides for performance analysis

  - mongostat
  - the profiler
  - stats

- Tips & tricks to improve performance
 

.. only:: instructor

   .. note::

      - A program that uses insert() and findAndModify() in a loop without indexes is useful to demonstrate a server beginning to display performance issues
      - A node.js program for this exists here: https://github.com/NathanZamecnik/messagequeue/blob/master/index.js
      - Acts as a message queue, writers write to the system while readers try and find messages with status "new" using findAndModify()
      - After a short time the server will begin to demonstrate performance issues
      - Describe program, run it and view the performance decline in mongostat
    

Performance Tools Overview
------------------

- mongostat
- mongotop
- db.collection.stats()
- db.currentOp()
- db.setProfilingLevel()
- db.serverStatus()


Mongostat and Mongotop
----------------------

- Mongostat samples a server every second

  - see current ops, pagefaults, network traffic, etc.
  - does not give a view into historic performance

    - use MMS for that

- Mongotop looks at the time spent on reads/writes in each collection


db.collection.stats()
------------------
- Used to view the current stats for a collection.
- Everything is in bytes; use the multiplier parameter to view in KB, MB, etc
- You can also use db.stats() to do this at scope of the entire database


The Profiler
------------

- Off by default; to reset, db.setProfilerLevel(0)
- captures "slow" queries

    - user may define what "slow" is

- default is 100ms: db.setProfilerLevel(1) == db.setProfilerLevel(1, 100)


The Profiler (continued)
------------------------

- If the profiler level is 2, it captures all queries.

  - This will severely impact performance.
  - Turs all reads into writes.

- Always turn the profiler off when done (set level to 0)
- creates db.system.profile collection



# EXERCISE BELOW
.. only:: instructor

   .. note::

      - Enable the profiler at default settings.
      - Run for 5 seconds.
      - Slow operations are captured.
      - The issue is there is not a proper index on the message field.
      - Allow class to discover this as the data is examined.
