==============
Authentication
==============

Learning Objectives
-------------------

Upon completing this module, you should understand:

- Authentication mechanisms
- External authentication
- Native authentication
- Internal node authentication
- Configuration of authentication mechanisms

.. include:: /includes/student-notes.rst


Authentication
--------------

- Authentication is concerned with:

  - Validating identities
  - Managing certificates / credentials
  - Allowing accounts to connect and perform authorized operations

- MongoDB provides native authentication and supports X509 certificates, LDAP, and Kerberos as well.


.. include:: /includes/student-notes.rst


Authentication Mechanisms
-------------------------

MongoDB supports a number of authentication mechanisms:

- SCRAM-SHA-1 (default >= 3.0)
- MONGODB-CR (legacy)
- X509 Certificates
- LDAP (MongoDB Enterprise)
- Kerberos (MongoDB Enterprise)

.. include:: /includes/student-notes.rst

.. only:: instructor

  .. note::

    - Native: SCRAM-SHA-1 and MongoDB-CR are native mechanisms in the sense that they are fully managed by MongoDB instances.
    - External: LDAP and Kerberos are external authentication mechanisms and are only available with MongoDB Enterprise.
    - X509 can also be considered native in terms of management but they rely on certificates generated by 3rd parties and only enforced by MongoDB.


Internal Authentication
-----------------------

For internal authentication purposes (mechanism used by replica sets and sharded clusters) MongoDB relies on:

- Keyfiles

  - Shared password file used by replica set members
  - Hexadecimal value of 6 to 1024 chars length

- X509 Certificates

.. include:: /includes/student-notes.rst


Simple Authentication Configuration
-----------------------------------

To get started we just need to make sure we are launching our mongod instances with the ``--auth`` parameter.

.. code-block:: bash

  mongod --dbpath /data/db --auth

For any connections to be established to this mongod instance, the system will require a username and password.

.. code-block:: bash

  mongo -u user -p                                                                                                                                                                                                                   MongoDB shell version: 3.2.5
  Enter password:

.. include:: /includes/student-notes.rst

.. only:: instructor

  .. note::

    - Using the ``--auth`` parameter will only cause mongod to enable authentication.
    - You need to create users separately.
    - the shell
    - You can take the opportunity to ask:

      - Q: What happens if we just launch a mongod without having any users created?
      - A: Nothing happens, we just can't access the instance.

    - cover localhost exception
    - create a first user with the following, avoid using ``root`` as the role

    .. code-block:: javascript

      db.createUser({user:'admin',pwd:'pwd',roles:[{role:'userAdminAnyDatabase',db:'admin'}]})

    - run the following to see who is authenticated:

    .. code-block:: javascript

      db.runCommand({connectionStatus:1})

