===================================
Replica Set Roles and Configuration
===================================

Learning Objectives
-------------------

Upon completing this module students should understand:

- The use of priority to preference certain members or datacenters as primaries.
- Hidden members.
- The use of hidden secondaries for data analytics and other purposes (when secondary reads are used).
- The use of slaveDelay to protect against operator error.

.. include:: /includes/student-notes.rst


Example: A Five-Member Replica Set Configuration
------------------------------------------------

- For this example application, there are two datacenters.
- We name the hosts accordingly: ``dc1-1``, ``dc1-2``, ``dc2-1``, etc.

  - This is just a clarifying convention for this example.
  - MongoDB does not care about host names except to establish connections.
- The nodes in this replica set have a variety of roles in this application.

.. include:: /includes/student-notes.rst


Configuration
-------------

.. code-block:: javascript

   conf = {             // 5 data-bearing nodes
     _id: "mySet",
     members: [
       { _id : 0, host : "dc1-1.example.net:27017", priority : 5 },
       { _id : 1, host : "dc1-2.example.net:27017", priority : 5 },
       { _id : 2, host : "dc2-1.example.net:27017" },
       { _id : 3, host : "dc1-3.example.net:27017", hidden : true },
       { _id : 4, host : "dc2-2.example.net:27017", hidden : true, 
         slaveDelay: 7200 }
     ]
   }

.. include:: /includes/student-notes.rst


Principal Data Center
---------------------

.. code-block:: javascript

   { _id : 0, host : "dc1-1.example.net", priority : 5 },
   { _id : 1, host : "dc1-2.example.net", priority : 5 },

.. include:: /includes/student-notes.rst

.. only:: instructor

   .. note::

      - The objective with the priority settings for these two nodes is to prefer to DC1 for writes.
      - The highest priority member that is up to date will be elected primary.
      - Up to date means the member's copy of the oplog is within 10 seconds of the primary.
      - If a member with higher priority than the primary is a secondary because it is is not up to date, but eventually catches up, it will force an election and win.


Data Center 2
-------------

.. code-block:: javascript

   { _id : 2, host : "dc2-1.example.net:27017" },

.. include:: /includes/student-notes.rst

.. only:: instructor

   .. note::

      - Priority is not specified, so it is at the default of 1.
      - ``dc2-1`` could become primary, but only if both ``dc1-1`` and ``dc1-2`` are down.
      - If there is a network partition and clients can only reach DC2, we can manually failover to ``dc2-1``.


What about ``dc1-3`` and ``dc2-2``?
-----------------------------------

.. code-block:: javascript

   // Both are hidden.
   // Clients will not distribute reads to hidden members.
   // We use hidden members for dedicated tasks.
   { _id : 3, host : "dc1-3.example.net:27017", hidden : true },
   { _id : 4, host : "dc2-2.example.net:27017", hidden : true, 
     slaveDelay: 7200 }

.. include:: /includes/student-notes.rst

.. only:: instructor

   .. note::

      - Will replicate writes normally.
      - We would use this node to pull reports, run analytics, etc.
      - We can do so without paying a performance penalty in the application for either reads or writes.


What about ``dc2-2``?
---------------------

.. code-block:: javascript

   { _id : 4, host : "dc2-2.example.net:27017", hidden : true, 
     slaveDelay : 7200 }

.. include:: /includes/student-notes.rst

.. only:: instructor

   .. note::

      - ``slaveDelay`` permits us to specify a time delay (in seconds) for replication.
      - In this case it is 7200 seconds or 2 hours.
      - slaveDelay allows us to use a node as a short term protection against operator error:

        - Fat fingering -- for example, accidentally dropping a collection in production.
        - Other examples include bugs in an application that result in corrupted data.
        - Not recommended. Use proper backups instead as there is no optimal delay value. E.g. 2 hours might be too long or too short depending on the situation.

