============================
Introduction to Replica Sets
============================

Learning Objectives
-------------------

Upon completing this module students should understand:

- Striking the right balance between cost and redundancy
- The many scenarios replication addresses and why
- How to avoid downtime and data loss using replication


Use Cases for Replication
-------------------------

- High Availability
- Disaster Recovery
- Functional Segregation


High Availability
-----------------

- Data still available following server failure.
- This is achieved through automatic failover.

.. only:: instructor

   .. note::

      If we lose a server:

      - Our database system can still service reads and writes.
      - Without manual intervention.


Disaster Recovery
-----------------

- We duplicate data across multiple database servers.
- Can restore data from another node following:

  - Hardware failure
  - Service interruption


Functional Segregation
----------------------

There are opportunities to exploit the topology of a replica set.

- Based on location
- For backups
- For system tasks, etc.

.. only:: instructor

   .. note::

      - You may direct particular queries at specific members to increase overall performance.
      - Backup data from secondaries to avoid performance penalties on the primary.
      - Dedicate secondaries for other purposes such as analytics jobs.


Replication is Not Designed for Scaling
---------------------------------------

- You can use it that way for reads.
- But there are drawbacks such as eventual consistency.
- Use sharding for scaling.


Replica Sets
------------

.. figure:: /images/replica-set-read-write-operations-primary.png
   :width: 500px

.. only:: instructor

   .. note::

      - MongoDB implements replication in the form of replica sets.
      - A replica set consists of one or more mongod servers.
      - There is at most one mongod that is "primary".
      - There are usually two or more other mongods that are secondaries.
      - Secondaries may become primary if there is a failover event of some kind.
      - Failover is automatic.
      - The secondaries elect a new primary automatically.



Primary Server
--------------

- Clients send writes the primary only.
- MongoDB maintains client libraries (drivers) in a number of languages.
- MongoDB drivers are ``replica set aware``.

.. only:: instructor

   .. note::

      If the primary for a replica set changes from one node to another the driver will automatically route writes to the correct mongod.


Secondaries
-----------

- A secondary replicates operations from another node in the replica set.
- Secondaries may replicate from the primary.
- Secondaries may also replicate from other secondaries.
- A secondary may become primary as a result of a failover scenario.


Heartbeats
----------

.. figure:: /images/replica-set-heartbeat.png
    :width: 500px

.. only:: instructor

   .. note::

      - The members of a replica set use heartbeats to determine if they can reach every other node.
      - The heartbeats are sent at short intervals.
      - If a node is unreachable this may indicate server failure or a network partition.


The Oplog
---------

- The oplog is a special collection that is basis for replication.
- The oplog maintains one entry for each document affected by every write operation.
- Secondaries copy operations from the oplog of their sync source.
