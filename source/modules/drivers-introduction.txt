===============================
Introduction to MongoDB Drivers
===============================

Learning Objectives
-------------------

Upon completing this module, students should understand:

- What MongoDB drivers are available
- Where to find MongoDB driver specifications
- Key driver settings


MongoDB Supported Drivers
-------------------------

- :ecosystem:`C</drivers/c>`
- :ecosystem:`C++</drivers/cpp>`
- :ecosystem:`C#</drivers/csharp>`
- :ecosystem:`Java</drivers/java>`
- :ecosystem:`Node.js</drivers/node-js>`
- :ecosystem:`Perl</drivers/perl>`
- :ecosystem:`PHP</drivers/php>`
- :ecosystem:`Python</drivers/python>`
- :ecosystem:`Ruby</drivers/ruby>`
- :ecosystem:`Scala</drivers/scala>`


MongoDB Community Supported Drivers
-----------------------------------

35+ different drivers for MongoDB:

Go, Erlang, Clojure, D, Delphi, F#, Groovy, Lisp, Objective C, Prolog, Smalltalk, and more


Driver Specs
------------

To ensure drivers have a consistent functionality, series of publicly available `specification documents <https://github.com/mongodb/specifications>`_ for:

- `Authentication <https://github.com/mongodb/specifications/tree/master/source/auth>`_
- `CRUD operations <https://github.com/mongodb/specifications/tree/master/source/crud>`_
- `Index management <https://github.com/mongodb/specifications/blob/master/source/index-management.rst>`_
- `SDAM <https://github.com/mongodb/specifications/tree/master/source/server-discovery-and-monitoring>`_
- `Server Selection <https://github.com/mongodb/specifications/tree/master/source/server-selection>`_
- Etc.


Driver Settings (Per Operation)
-------------------------------

- Read preference
- Write concern
- Maximum operation time (maxTimeMS)
- Batch Size (batchSize)
- Exhaust cursor (exhaust)
- Etc.


Driver Settings (Per Connection)
--------------------------------

- Connection timeout
- Connections per host
- Time that a thread will block waiting for a connection (maxWaitTime)
- Socket keep alive
- Sets the multiplier for number of threads allowed to block waiting for a connection
- Etc.


Insert a Document with the Java Driver
--------------------------------------

Connect to a MongoDB instance on localhost:

.. code-block:: javascript

   MongoClient mongoClient = new MongoClient();

Access the test database:

.. code-block:: javascript

   MongoDatabase db = mongoClient.getDatabase("test");

Insert a myDocument Document into the test.blog collection:

.. code-block:: javascript

   db.getCollection("blog").insertOne(myDocument);


Insert a Document with the Python Driver
----------------------------------------

Connect to a MongoDB instance on localhost:

.. code-block:: javascript

  client = MongoClient()

Access the test database:

.. code-block:: javascript

   db = client['test']

Insert a myDocument Document into the test.blog collection:

.. code-block:: javascript

   db.blog.insert_one(myDocument);


Insert a Document with the C++ Driver
-------------------------------------

Connect to the "test" database on localhost:

.. code-block:: javascript

  mongocxx::instance inst{};
  mongocxx::client conn{};

  auto db = conn["test"];


Insert a myDocument Document into the test.blog collection:

.. code-block:: javascript

   auto res = db["blog"].insert_one(myDocument);






