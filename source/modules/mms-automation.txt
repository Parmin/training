==========
Automation
==========


Learning Objectives 
-------------------

Upon completing this module students should understand:

- Use cases for MMS Automation
- The MMS Automation internal workflow

.. include:: /includes/student-notes.rst

What is MMS Automation
----------------------

Fully managed MongoDB deployment on your own servers:

- Automated provisioning
- Dynamically add capacity (e.g. add more shards or replica set nodes)
- Upgrades
- Admin tasks (e.g. change the size of the oplog)
  
.. include:: /includes/student-notes.rst
  
How Does MMS Automation Work?
-----------------------------

- MMS Automation agent installed on each server in cluster
- Administrator creates design goal for system (through MMS interface)
- MMS Automation agents periodically check with MMS to get new design instructions
- Agents create and follows a plan for implementing cluster design
- Minutes later, cluster design is complete, cluster is in goal state
  
.. include:: /includes/student-notes.rst

MMS Automation Agents
---------------------

.. image:: /images/mms-automation.svg
   :align: center

.. include:: /includes/student-notes.rst
  
Sample Automation Use Case
--------------------------

Administrator wants to create a 100 shard cluster, with each shard comprised of a 3 node replica set:

- Administrator installs automation agent on 300 servers
- Cluster design is created in MMS, then deployed to agents
- Agents execute instructions until 100 shard cluster is complete (usually several minutes)
  
.. include:: /includes/student-notes.rst
  
Upgrades with MMS Automation
----------------------------

- Upgrades without automation can be a manually intensive process (e.g. 300 servers)
- A lot of edge cases when scripting (e.g. 1 shard has problems, or one replica set is a mixed version)
- One click upgrade with MMS Automation for the entire cluster
  
.. include:: /includes/student-notes.rst

MMS Automation: Behind the Scenes
--------------------------------

- Agents ping MMS for new instructions
- Instructions contained in cluster configuration file (has the state of the cluster changed?)

.. include:: /includes/student-notes.rst

MMS Automation: Behind the Scenes
--------------------------------

- Agents compare their local configuration file with the latest version from MMS
- Configuration file in json
- All communications over SSL

.. code-block:: javascript

	{
	    "groupId": "55120365d3e4b0cac8d8a52a737",
	    "state": "PUBLISHED",
	    "version": 4,
	    "cluster": { ...
  
.. include:: /includes/student-notes.rst

MMS Automation: Behind the Scenes
--------------------------------

When version number of configuration file on MMS is greater than local version, agent begins making a plan to implement changes:

.. code-block:: javascript

	"replicaSets": [
        {
            "_id": "shard_0",
            "members": [
                {
                    "_id": 0,
                    "host": "DemoCluster_shard_0_0",
                    "priority": 1,
                    "votes": 1,
                    "slaveDelay": 0,
                    "hidden": false,
                    "arbiterOnly": false
                },
            ...

.. include:: /includes/student-notes.rst

MMS Automation: Behind the Scenes
--------------------------------

Automation agent is considered to be in goal state after all cluster changes (related to the individual agent) have been implemented.

.. include:: /includes/student-notes.rst

MMS Automation Demo
-------------------

.. include:: /includes/student-notes.rst

.. only:: instructor

   .. note::

      - Go to your Admin page (within MMS) -> My groups, create a new group, and walk through the process of setting up a small cluster on your laptop

