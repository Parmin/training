===============
Partial Indexes
===============


Learning Objectives
-------------------

Upon completing this module, students should be able to:

- Outline how partial indexes work
- Distinguish partial indexes from sparse indexes
- List and describe the use cases for partial indexes
- Create and use partial indexes

.. include:: /includes/student-notes.rst


What are Partial Indexes?
-------------------------

- Partial indexes only index the documents in a collection that match a filter expression.
- Benefits include:

  - Lower storage requirements

    - On disk
    - In memory

  - Can reduce the performance impact of indexes on writes to a collection

.. include:: /includes/student-notes.rst


Creating Partial Indexes
------------------------

- Create a partial index by:

  - Calling ``db.collection.createIndex()``
  - Passing the ``partialFilterExpression`` option

- You can specify a ``partialFilterExpression`` on any MongoDB index type.
- The filter does not need to be on indexed fields, but it can be.

.. include:: /includes/student-notes.rst


Example: Creating Partial Indexes
---------------------------------

- Consider the following schema:

  .. literalinclude:: /includes/partial_indexes.js
    :language: javascript
    :lines: 5

- Create a partial index on the "integer" field
- Create it only where "importance" is "high"

.. include:: /includes/student-notes.rst


Example: Creating Partial Indexes (Continued)
---------------------------------------------

.. literalinclude:: /includes/partial_indexes.js
  :language: javascript
  :lines: 9-12

.. include:: /includes/student-notes.rst

.. only:: instructor

  .. note::

    - We are choosing to name this index; the name is optional
    - This is a single-field index, but other index types work the same
    - The filter can be on fields other than the index keys


Filter Conditions
-----------------

- As the value for ``partialFilterExpression``, specify a document that defines the filter.
- The following types of expressions are supported.
- Use these in combinations that are appropriate for your use case.
- Your filter may stipulate conditions on multiple fields.

  - equality expressions
  - ``$exists``: true expression
  - ``$gt``, ``$gte``, ``$lt``, ``$lte`` expressions
  - ``$type`` expressions
  - ``$and`` operator at the top-level only


Partial Indexes vs. Sparse Indexes
----------------------------------

- Both sparse indexes and partial indexes include only a subset of documents in a collection.
- Sparse indexes reference only documents for which a specified field exists.
- Partial indexes provide a richer field of options than sparse indexes.

.. literalinclude:: /includes/partial_indexes.js
  :language: javascript
  :lines: 16-19

.. include:: /includes/student-notes.rst

.. only:: instructor

  .. note::

    - Using ``{ $exists: true }`` is how to create sparse index functionality for a single field using a partial index
    - Sparse indexes still work in MongoDB 3.2, but we now recommend people use partial indexes going forward


Quiz
----

Which documents in a collection will be referenced by a partial index on that collection?

.. include:: /includes/student-notes.rst

.. only:: instructor

  .. note::

    - Correct answer: only those documents that match the ``partialFilterExpression``
    - Wrong answers:

      - All documents. This is the case for standard indexes.
      - Only those documents where the field exists. This is the case for sparse indexes.


Identifying Partial Indexes
---------------------------

.. literalinclude:: /includes/partial_indexes.js
  :language: javascript
  :lines: 32-47


.. include:: /includes/student-notes.rst

.. only:: instructor

  .. note::

    - You can identify a partial index from the output of getIndexes()
    - The presence of of a partialFilterExpression indicates a partial index
    - This also allows you to identify the coverage of the index
    - This index is on the "integer" field
    - But the partialFilterExpression is on the "importance" field

      - Only indexing the documents with "importance": "high"


Partial Indexes Considerations
------------------------------

- Not used when:

  - The indexed field is not in the query
  - A query goes outside of the filter range, even if no documents are out of range

- You can .explain() queries to check index usage

.. include:: /includes/student-notes.rst


Quiz
----

Consider the following partial index. Note the ``partialFilterExpression`` in particular:

.. literalinclude:: /includes/partial_indexes.js
  :language: javascript
  :lines: 81-95

.. include:: /includes/student-notes.rst


Quiz (Continued)
----------------

Which of the following documents are indexed?

.. literalinclude:: /includes/partial_indexes.js
  :language: javascript
  :lines: 99-103

.. include:: /includes/student-notes.rst

.. only:: instructor

  .. note::

    - The first and last documents are the ones that will be indexed.
