========================
Sharding - The Shard Key
========================


Learning Objectives
-------------------

Upon completing this module, students should understand:

- The importance of the shard key
- Pitfalls in choosing a shard key
- Opportunities presented by choosing a shard key


Choosing the Shard Key: A Pivotal Moment
----------------------------------------

- Beginning to shard is easy. It's also easy to do it wrong, either by missing an opportunity or by doing something terrible.
- With a good shard key, you might easily see a situation where:

  - Your queries will hit only 1-2 servers per query
  - Your writes will be distributed across all servers
  - Your data will be evenly spread across all drives
  - Things will stay this way as you scale

- With a bad shard key:

  - Your queries might all hit every server
  - Your writes will be concentrated on one server
  - Most of your data will be on just a few servers
  - Adding more servers to the cluster won't help.


Properties of a Good/Bad Shard Key: Cardinality
-----------------------------------------------

- A good shard key will have high _cardinality_.

  - This means that every document has a unique shard key (or nearly unique)
  - If you don't, then all documents with a given shard key will end up on the same server
    
    - Adding more servers won't help this, because data is broken up by shard key, so data with the same shard key will be in the same place

  - Hashing the shard key will not help with this.


Properties of a Good/Bad Shard Key: Monotonicity
------------------------------------------------

- A good shard key will have non-monotonic values 

  - Datetimes and related fields (such as the ObjectId) are always increasing, and make bad shard keys

    - Counters have the same problem

  - Monotonic shard keys will leave you with "hot" servers, where all of the inserts happen on the same machine.

    - The data will eventually be moved, but in the meantime, one server is getting hammered while others are idle.
    - Also, moving data is also a write operation, so that has costs, too.

  - If you hash your shard key, it will solve this problem


Choosing a Shard Key: An Optimization Opportunity
-------------------------------------------------

- Your shard key should try to match your query pattern.
  
  - If your query is going to find only one document, then you only need good cardinality
  - If you plan to frequently query a set of documents at once, having the shard key match (or even include) that query will ensure that those documents are all together on one server.
