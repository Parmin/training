==================
Operator Modifiers
==================


List of Modifier Operators
--------------------------

- These are operators used to modify other operators.
- ``$each`` : Turns ``$push`` into ``$pushAll`` and does something similar for
  ``$addToSet``
- ``$slice``: Modifies ``$push : { $each ... }`` to limit the size of updated arrays
- ``$sort``: Modifies ``$push`` to order the updated arrays
- ``$position``: Modifies ``$push`` to specify position that we're pushing to


Exercise: Using Modifier Operators
----------------------------------

.. code-block:: javascript

    for (i=1; i<=5; i++) {
        db.modifierOperators.insertOne( { _id : i,
                                          a : i,
                                          b: [ 1, 2, 3, 3, "hello", 6 ] } ) }
    db.modifierOperators.find()
    db.modifierOperators.updateOne( { _id : 1 },
                                    { $addToSet : { b : { $each : [ 2, 3, 4 ] } } } )
    // Only pushes the 4
    db.modifierOperators.find()
    db.modifierOperators.updateOne( { _id : 2 },
                                    { $push : { b : { $each : [ 7, 12, 13 ],
                                                      $slice : 8 } } } )
    // Final array is chopped off at the beginning so it is only 8 elements
    db.modifierOperators.find()
    db.modifierOperators.updateOne( { _id : 3 },
                                    { $push : { b : { $each : [ 7, 12, 13 ],
                                                      $slice : -8 } } } )

Exercise: Using Modifier Operators (Continued)
----------------------------------------------

.. code-block:: javascript

    // Final array is chopped off at the end so it is only 8 elements
    db.modifierOperators.find()
    db.modifierOperators.updateOne( { _id : 4 },
                                    { $push : { b : { $each : [ -5, -7, -12 ],
                                                      $sort : 1 } } } )
    // The "b" array is now sorted ascending
    db.modifierOperators.find()
    db.modifierOperators.updateOne( { _id : 5 },
                                    { $push : { b : { $each : [ -5, -7, -12 ],
                                                      $sort : -1 } } } )
    // The "b" array is now sorted descending
    db.modifierOperators.find()
    // Let's do a more complicated example, but first we need a more
       complicated document
    db.modifierOperators.insertOne( { _id : 5, quizzes: [ { id : 1, score : 77 },
                                                          { id : 2, score : 99 },
                                                          { id : 3, score : 88 } ] } )
    db.modifierOperators.find( { _id : 5 }, { $push : { quizzes : { $each : [ { id : 4, score : 66},
                                                                              { id : 5, score : 55 } ],
                                                                    $sort : { score : 1 } } } } )
    // We sorted on a field in the documents in the array!
    db.modifierOperators.find()
    db.modifierOperators.find( { _id : 1 }, { $push : { b : { $each : [ "position", "three" ],
                                                              $position : 3 } } } )
    db.modifierOperators.find()

    - $setOnInsert (used for upsert)
