====================
Sharding - Balancing
====================

Learning Objectives
-------------------

Upon completing this module, students should understand:

- The relationship of balancing to chunks and the balancer
- The status of chunks in a newly sharded collection
- How chunk splits automatically occur
- Advantages of pre-splitting chunks
- How the Balancer Works


Chunks and the Balancer
-----------------------

- Chunks are groups of documents that stay together but can be moved, as a group, from one shard to another.
- Chunks can be split when they grow too large.
- The balancer decides where chunks go, and handles the migrations of chunks from one server to another.


Chunks in a Newly Sharded Collection
------------------------------------

- When a collection is sharded, that collection will start with just one chunk

  - When we say its 'range,' we mean values of the shard key that are contained by the chunk.

    - The shard key is the only thing that determines which chunk a document will be contained in.

  - The newly created collection's single chunk will have a range from { $minKey : 1 } to { $maxKey : 1 }
  - This means that any value, from the smallest possible to the largest, will fall within this chunk's range.

- This chunk will start out on the Primary Shard for that database (which is the server that holds all unsharded collections).


Chunk Splits
------------

.. figure:: /images/sharding-splitting.png
   :width: 600 px
   :align: center

.. only:: instructor

   .. note::

      - When a chunk gets larger than 64 MB it gets split roughly in half.
      - The chunk can only be split between two values of a shard key.
      - It may not always split exactly in half.
      - If every document on a chunk has the same shard key value, it cannot be split.
      - This is why the shard key's cardinality is important
      - Chunk splitting is just a bookkeeping entry in the metadata. 
      - No data bearing documents are altered.





Pre-Splitting Chunks
--------------------

- This is an optional process that gives you control over where your data will go when loaded.
- You can manually pre-split chunks, and either let the balancer migrate the empty chunks to different shards, or manually place them on shards where they belong.
- Manually pre-splitting is useful if:

  - You plan to do a large data import early on, which will take time to split and balance automatically.
  - You expect a heavy initial server load, and want to partition your writes across your cluster.


Start of a Balancing Round
--------------------------

- A balancing round can be initiated by any mongos in the cluster.
- A balancing round is started when the chunks on a cluster become imbalanced.
  
  - A balancing round starts when the shard with the most chunks has 2-8 more chunks than the shard with the fewest, depending on cluster size.

    - 2 when the cluster has <20 chunks
    - 4 when the cluster has 20-79 chunks
    - 8 when the cluster has 80+ chunks


Chunk Migration
---------------

- A chunk migration goes through the following steps:

  1. The balancer process sends the moveChunk command to the source shard.
  2. The source shard continues to process reads/writes for that chunk during the migration.
  3. The destination shard begins requesting documents in the chunk, and begins receiving copies of the data.
  4. After receiving the final document in the chunk, the destination shard starts a synchronization to ensure it receives changes to the chunk.
  5. When synchronized, the destination shard tells the config db that it has the chunk.

    - At this point, the chunk is considered to be on the destination shard, and that shard will handle all reads/writes.

  6. The source shard deletes its copy of the chunk.


The Balancing Round (conclusion)
--------------------------------

- Each chunk will move from the shard with the most chunks to the shard with the fewest.
- A balancing round ends when all shards differ in their number of chunks by at most one.
