========================
Security - Authorization
========================

Learning Objectives
-------------------

Upon completing this module, students should understand:

- Basic user roles in MongoDB
- How to set up CR authentication
- How to manipulate user roles in MongoDB


Setting Up MongoDB-CR
---------------------

- Start a mongod instance with --auth to enable this feature
- You can initially login using localhost (the "localhost exception")
- Make sure you create a userAdminAnyDatabase or a similar role so that you can create users with the appropriate privileges
- Log out. At this point, you will need to log in as a user.

.. include:: /exercises/security-mongod-setup.txt

.. include:: /exercises/security-create-useradmin.txt


Using MongoDB Roles
-------------------

- Each user has a database on which they can log in
- Each user must provide their username and password on login

  - From the shell, the -u flag will precede the username
  - The password, using the -p flag, can be entered immediately after invoking the mongo shell, or can be part of the shell command.

- userAdmins may create other users.


MongoDB Built-in User Roles
---------------------------

- Roles apply to one database unless 'AnyDatabase' is part of the name
- read
- readWrite
- dbAdmin: can create & drop DB's, plus other activities; can't read/write most data
- userAdmin: can create users & modify roles, etc.

  - can create users with readWrite access, and/or give self read/write access, but can't read/write by default.

- Lots of other roles: see http://docs.mongodb.org/manual/reference/built-in-roles/

.. include:: /exercises/security-create-readwrite.txt

MongoDB Custom User Roles
-------------------------

- You can create custom user roles in MongoDB.
- You do this by modifying the system.roles collection.
- You can also inherit privileges from other roles into a given role.
- You won't remember how to do this, so if you need it, consult the docs.
