======================
Schema Design Patterns
======================

.. only:: instructor

   .. note::

      Avoid using the term **pattern** for complete solutions to problems.
      Used for representing partial solutions, like the Gang of Four uses it
      for software design patterns


Leaning Objectives
------------------

Be able to:

- Identify schema design patterns
- Identify by a common name those patterns
- Use those patterns as building blocks for their solutions


Patterns
--------

- They are not:

  - Modeling of relationships
  - The full "solution" of a problem

- They only address a precise use case in a problem

  - Similar to the GoF (Gang of Four) with their patterns for Object Oriented Design

.. include:: /includes/student-notes.rst


Pattern Characteristics
-----------------------

NoSQL patterns ...

.. rst-class:: longlist

- Often address performance concerns

  - Like reducing the number of reads
  - If performance is not an issue, you may want to design for simplicity

- May create duplication in the data

  - important aspect of the duplication of data is how and when you want to handle it

    - is stale data fine for a while?
    - should you batch the updates?

.. include:: /includes/student-notes.rst


Pattern - Subset
----------------

- You want to display dependent information, however only part of it
- The rest of the data is fetched only if needed
- Examples:

  - Last 10 comments on an article

.. include:: /includes/student-notes.rst

.. only:: instructor

   .. note::

      - There will be duplication of data
      - Duplication may mean stale info if there are updates
        However this is OK


Pattern - Example of Subset
---------------------------

.. include:: /images/pattern-subset.rst

.. include:: /includes/student-notes.rst


Pattern - Attributes
--------------------

- A lot of different and predictable values
- Need to index the attributes
- Examples:

  - Catalog items

    - A shirt is XL, blue, iron-free

.. include:: /includes/student-notes.rst

.. only:: instructor

   .. note::

      - Emphasis on the fact that you would have to create
        a new index for each new attribute, country in the movies example


Pattern - Example of Attributes
-------------------------------

.. include:: /images/pattern-attributes.rst

.. include:: /includes/student-notes.rst


Pattern - Computed
------------------

- One document shows a sum of data from other documents
- Examples:

  - Cumulative sales from many theaters

.. include:: /includes/student-notes.rst

.. only:: instructor

   .. note::

      - Other synonyms:

        - rolled-up
        - CQRS - Command Query Responsibility Segregation


Pattern - Example of Computed
-----------------------------

.. include:: /images/pattern-aggregate.rst

.. include:: /includes/student-notes.rst


Pattern - Bucket
----------------

- Embedding seems preferable to linking
- Too much data to have one document for each piece
- Too much data to fit as one array

.. include:: /includes/student-notes.rst

.. only:: instructor

   .. note::

      - Since we share this picture with "Overflow", only focus
        on the fact that we bucket the number of castAndCrew (or extras)


Pattern - Example of Bucket
---------------------------

.. include:: /images/pattern-overflow.rst

.. include:: /includes/student-notes.rst

.. only:: instructor

   .. note::

      - TODO - have a separate image for bucket


Pattern - Overflow
------------------

- Only a few documents are too big
- Don’t want to model the relationship in a different way
- Example:

  - Justin Bieber has too many followers to fit into an array of refs

- Outliers should not drive the design, sacrificing performance for 99.9
  percent of the use cases

.. include:: /includes/student-notes.rst

.. only:: instructor

   .. note::

      - In this example, we build on the 'bucket' pattern


Pattern - Example of Overflow
-----------------------------

.. include:: /images/pattern-overflow.rst

.. include:: /includes/student-notes.rst


Pattern - Approximation
-----------------------

- Does not have to be exact
- No source of truth
- Examples:

  - Population of a country
  - Web page hits

    - Only count once in 100, increment by 100

.. include:: /includes/student-notes.rst

.. only:: instructor

   .. note::

      - No one gives a dawn if the value is exact


Pattern - Example of Approximation
----------------------------------

.. include:: /images/pattern-approximation.rst

.. include:: /includes/student-notes.rst


Pattern - Pre-allocation
------------------------

- Superset of “Time Series”
- Examples:

  - Metrics collected every minute
  - Seats in a concert

.. include:: /includes/student-notes.rst

.. only:: instructor

   .. note::

      - "Time Series" are often represented using this pattern


Pattern - Example of Pre-allocation
-----------------------------------

.. include:: /images/pattern-pre-allocation.rst

.. include:: /includes/student-notes.rst


Pattern - Tree as Nodes
-----------------------

.. include:: /images/pattern-tree-as-nodes.rst

.. include:: /includes/student-notes.rst

.. only:: instructor

   .. note::

      - Node is defined by itself and its parent
      - Likely need recursive lookup to build it


Pattern - Tree as Children
--------------------------

.. include:: /images/pattern-tree-as-children.rst

.. include:: /includes/student-notes.rst

.. only:: instructor

   .. note::

      - Node is defined by itself and its children


Pattern - Tree as Ancestors
---------------------------

.. include:: /images/pattern-tree-as-ancestors.rst

.. include:: /includes/student-notes.rst

.. only:: instructor

   .. note::

      - Node is defined by itself and all its parent/ancestors


Comparing Tree Patterns
-----------------------

.. list-table::
   :header-rows: 1
   :widths: 70 40 40 50

   * -
     - Nodes
     - Children
     - Ancestors
   * - Restructure tree
       (num of updates)
     - One per moved node
     - One per moved node
     - Many updates per moved node
   * - Information per document
     - Very little
     - Very little
     - Much more

.. include:: /includes/student-notes.rst

.. only:: instructor

   .. note::

      - Node is defined by itself and its children


Summary of Patterns
-------------------

.. KI learning_obj : list of patterns

.. rst-class:: longlist

* Subset
* Attributes
* Computed
* Bucket
* Overflow
* Approximation
* Pre-allocation
* Tree

  * Node
  * Children
  * Ancestors

.. include:: /includes/student-notes.rst

.. only:: instructor

   .. note::

      - Should we consider 'versioning' as a pattern?
